<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.common.mapper.mapper.ext.ExtServerRuleMapper">

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.name != null'>
            and t.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test='${condition}.severity != null'>
            and t.severity
            <include refid="condition">
                <property name="object" value="${condition}.severity"/>
            </include>
        </if>
        <if test='${condition}.type != null'>
            and t.type
            <include refid="condition">
                <property name="object" value="${condition}.type"/>
            </include>
        </if>
        <if test='${condition}.ruleTag != null and ${condition}.ruleTag.value != "all"'>
            and #{${condition}.ruleTag.value}
            <choose>
                <when test='${condition}.ruleTag.operator == "in"'>
                    in (select tag_key from rule_tag_mapping where rule_id = t.id)
                </when>
                <when test='${condition}.ruleTag.operator == "not in"'>
                    not in (select tag_key from rule_tag_mapping where rule_id = t.id)
                </when>
            </choose>
        </if>
        <if test='${condition}.group != null'>
            and #{${condition}.group.value}
            <choose>
                <when test='${condition}.group.operator == "in"'>
                    in (select group_id from rule_group_mapping where rule_id = t.id)
                </when>
                <when test='${condition}.groupId.operator == "not in"'>
                    not in (select group_id from rule_group_mapping where rule_id = t.id)
                </when>
            </choose>
        </if>
    </sql>

    <select id="ruleList" parameterType="com.hummer.common.core.domain.request.server.ServerRuleRequest"
            resultType="com.hummer.common.core.dto.ServerRuleDTO">
        SELECT
        t.*,
        t1.tag_key as tagKey,
        t2.tag_name as tagName
        FROM server_rule t
        left join rule_tag_mapping t1 on t1.rule_id = t.id
        left join rule_tag t2 on t1.tag_key = t2.tag_key

        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.status != null and request.status != ''">
                and t.status = #{request.status}
            </if>
            <if test="request.type != null and request.type != ''">
                and t.type = #{request.type}
            </if>
            <if test="request.name != null and request.name != ''">
                and LOWER(t.name) like CONCAT('%',LOWER(#{request.name}),'%')
            </if>
            <if test="request.description != null and request.description != ''">
                and LOWER(t.description) like CONCAT('%',LOWER(#{request.description}),'%')
            </if>
        </where>
        ORDER BY t.last_modified desc
    </select>

</mapper>
