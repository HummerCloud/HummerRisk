<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.common.mapper.mapper.ext.ExtCloudResourceItemMapper">
    <resultMap id="BaseResultMap" type="com.hummer.common.mapper.dto.CloudResourceItemDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="resource_id" jdbcType="VARCHAR" property="resourceId" />
        <result column="hummer_id" jdbcType="VARCHAR" property="hummerId" />
        <result column="resource_type" jdbcType="VARCHAR" property="resourceType" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="account_id" jdbcType="VARCHAR" property="accountId" />
        <result column="region_id" jdbcType="VARCHAR" property="regionId" />
        <result column="region_name" jdbcType="VARCHAR" property="regionName" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="resource" jdbcType="VARCHAR" property="resource" />
        <result column="risk_count" jdbcType="VARCHAR" property="riskCount" />
    </resultMap>

    <resultMap id="SummaryResultMap" type="com.hummer.common.mapper.domain.CloudResourceSummary">
        <result column="resource_type" jdbcType="VARCHAR" property="resourceType" />
        <result column="count" jdbcType="INTEGER" property="count" />
    </resultMap>
    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.regionId != null'>
            and (t.region_id
            <include refid="condition">
                <property name="object" value="${condition}.regionId"/>
            </include>
                or t.region_name
            <include refid="condition">
                <property name="object" value="${condition}.regionId"/>
            </include>
              )
        </if>
        <if test='${condition}.accountId != null'>
            and t.account_id
            <include refid="condition">
                <property name="object" value="${condition}.accountId"/>
            </include>
        </if>
        <if test='${condition}.pluginName != null'>
            and t.plugin_name
            <include refid="condition">
                <property name="object" value="${condition}.pluginName"/>
            </include>
        </if>
        <if test='${condition}.pluginId != null'>
            and t.plugin_id
            <include refid="condition">
                <property name="object" value="${condition}.pluginId"/>
            </include>
        </if>
        <if test='${condition}.resourceType != null'>
            and t.resource_type
            <include refid="condition">
                <property name="object" value="${condition}.resourceType"/>
            </include>
        </if>
    </sql>

    <select id="selectResourceSummary" resultMap="SummaryResultMap">
        select a.resource_type , count(a.id) as count from cloud_resource_item a
        join cloud_account b on a.account_id = b.id
        <where>
            <if test="accountId != null and accountId != ''">
                and a.account_id = #{accountId}
            </if>
        </where>
        group by a.resource_type
    </select>

    <select id="selectByRequest" resultMap="BaseResultMap" >
        select t.*,t2.risk_count
        from cloud_resource_item t
        join cloud_account account on account.id = t.account_id
        left join
            (select a.hummer_id,count(*) as risk_count FROM resource_item a
            join cloud_task_item_resource b on a.resource_id = b.resource_id
            join cloud_task_item c on b.task_item_id = c.id
            group by a.hummer_id
            order by hummer_id) t2 on t.hummer_id = t2.hummer_id
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>
            <if test="request.acountName != null and request.acountName != ''">
                and account.name like CONCAT('%', #{request.acountName},'%')
            </if>
            <if test="request.regionName != null and request.regionName != ''">
                and t.region_name like CONCAT('%', #{request.regionName},'%')
            </if>
            <if test="request.resourceType != null and request.resourceType != ''">
                and t.resource_type like CONCAT('%', #{request.resourceType},'%')
            </if>
        </where>
        order by account.name,t.region_id,t.resource_type,t.create_time desc
    </select>

    <select id="selectResourceRule" resultType="com.hummer.common.mapper.dto.ResourceRuleDTO" parameterType="String">
        select a.hummer_id,a.resource_type, c.severity,b.rule_id,c.name as rule_name
        from resource_item a
        inner join resource_rule b on a.resource_id = b.resource_id
        inner join rule c on b.rule_id = c.id
        where hummer_id = #{hummerId}
    </select>

    <select id="countResourceTask" resultType="int" >
        SELECT count(*) as num FROM cloud_task_item a
            INNER JOIN rule b on a.rule_id = b.id
            INNER JOIN rule_type c on b.id = c.rule_id
        where a.account_id=#{accountId} and a.region_id = #{regionId} and c.resource_type = #{resourceType}
    </select>

    <select id="selectResourceRiskCount" resultType="int">
        select count(1) as risk_count FROM resource_item a
        join cloud_task_item_resource b on a.resource_id = b.resource_id
        join cloud_task_item c on b.task_item_id = c.id
        where a.hummer_id = #{hummerId}
    </select>

    <select id="selectResourceRisk" parameterType="String">
        select d.* FROM resource_item A
        join cloud_task_item_resource b on a.resource_id = b.resource_id
        join cloud_task_item c on b.task_item_id = c.id
        join cloud_task d on d.id = c.task_id
        where hummer_id = #{hummerId}
    </select>

</mapper>
