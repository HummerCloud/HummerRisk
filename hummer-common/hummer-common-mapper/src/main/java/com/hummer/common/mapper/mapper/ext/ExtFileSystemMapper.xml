<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.common.mapper.mapper.ext.ExtFileSystemMapper">

    <resultMap id="FileSystemMap" type="com.hummer.common.mapper.dto.FsDTO"
               extends="com.hummer.common.mapper.mapper.FileSystemMapper.BaseResultMap">
        <result column="user" property="user"/>
    </resultMap>

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
            and t.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test="${condition}.updateTime != null">
            and t.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            and t.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            and user.id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
    </sql>

    <select id="fsList" resultMap="FileSystemMap">
        select
        t.*,
        user.name as userName
        from file_system as t
        left join user on t.creator = user.id
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.name != null and request.name != ''">
                and LOWER(t.name) like CONCAT('%', LOWER(#{request.name}),'%')
            </if>
            <if test="request.fileName != null and request.fileName != ''">
                and LOWER(t.file_name) like CONCAT('%', LOWER(#{request.fileName}),'%')
            </if>
            <if test="request.userName != null and request.userName != ''">
                and LOWER(user.name) like CONCAT('%', LOWER(#{request.userName}),'%')
            </if>
            <if test="request.status != null and request.status != ''">
                and t.status = #{request.status}
            </if>
        </where>
        order by t.update_time desc
    </select>

    <select id="topInfo" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT *
        from (
              (SELECT IFNULL(count(*), 0) as filesystems from file_system) as filesystems,
              (SELECT IFNULL(count(t.id), 0) as critical from file_system_result_item t join file_system_result t1 on t.result_id = t1.id where LOWER(t.severity) = 'critical') as critical,
              (SELECT IFNULL(count(t.id), 0) as high from file_system_result_item t join file_system_result t1 on t.result_id = t1.id where LOWER(t.severity) = 'high') as high,
              (SELECT IFNULL(count(t.id), 0) as medium from file_system_result_item t join file_system_result t1 on t.result_id = t1.id where LOWER(t.severity) = 'medium') as medium,
              (SELECT IFNULL(count(t.id), 0) as low from file_system_result_item t join file_system_result t1 on t.result_id = t1.id where LOWER(t.severity) = 'low') as low,
              (SELECT IFNULL(count(t.id), 0) as unknown from file_system_result_item t join file_system_result t1 on t.result_id = t1.id where LOWER(t.severity) = 'unknown') as unknown
         )
    </select>

    <select id="projectChart" resultType="java.util.Map">
        SELECT
            concat(t.name, ' (', t.return_sum, ')') as 'name',
            t.return_sum as 'value'
        FROM file_system_result as t
        ORDER BY t.update_time DESC
        Limit 10;
    </select>

    <select id="severityChart" resultType="java.util.Map">
        SELECT
            t.name as 'product',
            (SELECT IFNULL(count(t1.id), 0) as Critical from file_system_result_item t1 where t1.result_id = t.id and LOWER(t1.severity) = 'critical') as Critical,
            (SELECT IFNULL(count(t1.id), 0) as High from file_system_result_item t1 where t1.result_id = t.id and LOWER(t1.severity) = 'high') as High,
            (SELECT IFNULL(count(t1.id), 0) as Medium from file_system_result_item t1 where t1.result_id = t.id and LOWER(t1.severity) = 'medium') as Medium,
            (SELECT IFNULL(count(t1.id), 0) as Low from file_system_result_item t1 where t1.result_id = t.id and LOWER(t1.severity) = 'low') as Low,
            (SELECT IFNULL(count(t1.id), 0) as Unknown from file_system_result_item t1 where t1.result_id = t.id and LOWER(t1.severity) = 'unknown') as Unknown
        FROM file_system_result as t
        ORDER BY t.update_time DESC
        Limit 10;
    </select>

</mapper>
