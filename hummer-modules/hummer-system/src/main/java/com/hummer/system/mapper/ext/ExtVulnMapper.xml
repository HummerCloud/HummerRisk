<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.system.mapper.ext.ExtVulnMapper">

    <resultMap id="TargetMap" type="com.hummer.common.core.domain.request.dashboard.DashboardTarget"
               extends="com.hummer.system.mapper.RuleMapper.BaseResultMap">
        <result column="ratio" jdbcType="VARCHAR" property="ratio"/>
        <result column="reSum" jdbcType="VARCHAR" property="reSum"/>
        <result column="ruSum" jdbcType="VARCHAR" property="ruSum"/>
        <result column="tagName" jdbcType="VARCHAR" property="tagName"/>
    </resultMap>

    <select id="target" parameterType="java.util.Map" resultMap="TargetMap">
        SELECT
        t.*,
        t3.tag_name AS tagName,
        IFNULL((
        SELECT
        sum( t1.return_sum )
        FROM
        resource t1
        LEFT JOIN resource_rule t2 ON t1.id = t2.resource_id
        WHERE
        t2.rule_id = t.id
        ), 0) as ruSum,
        IFNULL((
        SELECT
        sum( t1.resources_sum )
        FROM
        resource t1
        LEFT JOIN resource_rule t2 ON t1.id = t2.resource_id
        WHERE
        t2.rule_id = t.id
        ), 0) as reSum,
        IFNULL(concat(truncate('100%'-
        IFNULL(
        (SELECT
        sum( t1.return_sum )
        FROM
        resource t1
        LEFT JOIN resource_rule t2 ON t1.id = t2.resource_id
        WHERE
        t2.rule_id = t.id
        ), 0) / IFNULL((
        SELECT
        sum( t1.resources_sum )
        FROM
        resource t1
        LEFT JOIN resource_rule t2 ON t1.id = t2.resource_id
        WHERE
        t2.rule_id = t.id
        ), 1)
        *100, 2),'%'), '100.00%') AS ratio
        FROM rule t
        LEFT JOIN rule_tag_mapping t2 ON t.id = t2.rule_id
        LEFT JOIN rule_tag t3 ON t2.tag_key = t3.tag_key
        LEFT JOIN cloud_account t4 ON t.plugin_id = t4.plugin_id
        LEFT JOIN plugin p on t.plugin_id = p.id
        <where>
            AND t4.`status` = 'VALID'
            <if test="severity != null">
                AND t.severity = #{severity}
            </if>
            <if test="tagKey != null">
                AND t2.tag_key = #{tagKey}
            </if>
            <if test="accountId != null">
                AND t4.id = #{accountId}
            </if>
            and p.type = 'cloud'
        </where>
        ORDER BY CONVERT(ratio, signed), ruSum desc
    </select>

    <select id="severityList" resultType="java.util.Map">
       SELECT
            t.severity,
            IFNULL( sum(t.return_sum), 0 ) AS returnSum,
            IFNULL( sum(t.resources_sum), 0 ) AS resourcesSum
        FROM
            resource t
            LEFT JOIN plugin p on t.plugin_id = p.id
        WHERE p.type = 'cloud'
        GROUP BY t.severity
    </select>

    <select id="overall" resultType="com.hummer.common.core.domain.request.chart.ChartData">
        SELECT
            IFNULL( sum( t4.return_sum ), 0 ) AS yAxis,
            IFNULL( sum( t4.resources_sum ), 0 ) AS yAxis2,
            t.tag_name AS groupName,
            t.tag_name AS xAxis
        FROM
            rule_tag t
            LEFT JOIN rule_tag_mapping t1 ON t.tag_key = t1.tag_key
            LEFT JOIN rule t2 ON t1.rule_id = t2.id
            LEFT JOIN resource_rule t3 ON t2.id = t3.rule_id
            LEFT JOIN resource t4 ON t3.resource_id = t4.id
            LEFT JOIN plugin p on t2.plugin_id = p.id
        WHERE p.type = 'cloud'
        GROUP BY
            t.tag_key
        HAVING
            t.tag_key IN ( 'cost', 'safety', 'tagging' )
        UNION ALL
        SELECT
            IFNULL( sum( t4.return_sum ), 0 ) AS yAxis,
            IFNULL( sum( t4.resources_sum ), 0 ) AS yAxis2,
            '其他' AS groupName,
            'other' AS xAxis
        FROM
            rule_tag t
            LEFT JOIN rule_tag_mapping t1 ON t.tag_key = t1.tag_key
            LEFT JOIN rule t2 ON t1.rule_id = t2.id
            LEFT JOIN resource_rule t3 ON t2.id = t3.rule_id
            LEFT JOIN resource t4 ON t3.resource_id = t4.id
            LEFT JOIN plugin p on t2.plugin_id = p.id
        WHERE
            t.tag_key NOT IN ( 'cost', 'safety', 'tagging' )
        AND p.type = 'cloud'
    </select>

    <select id="ruleGroup" resultType="com.hummer.common.core.domain.request.chart.ChartData">
        SELECT
            IFNULL( sum( t4.return_sum ), 0 ) AS yAxis,
            IFNULL( sum( t4.resources_sum ), 0 ) AS yAxis2,
            t.name AS groupName,
            t.name AS xAxis
        FROM
            rule_group t
            LEFT JOIN rule_group_mapping t1 ON t.id = t1.group_id
            LEFT JOIN rule t2 ON t1.rule_id = t2.id
            LEFT JOIN resource_rule t3 ON t2.id = t3.rule_id
            LEFT JOIN resource t4 ON t3.resource_id = t4.id
            LEFT JOIN plugin p on t2.plugin_id = p.id
        WHERE p.type = 'cloud'
        GROUP BY
            t.name
        ORDER BY
            yAxis desc
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <select id="report" resultType="com.hummer.common.core.domain.request.chart.ChartData">
        SELECT
            IFNULL( sum( t4.return_sum ), 0 ) AS yAxis,
            IFNULL( sum( t4.resources_sum ), 0 ) AS yAxis2,
            t.item_sort_first_level AS groupName,
            t.item_sort_first_level AS xAxis
        FROM
            rule_inspection_report t
            LEFT JOIN rule_inspection_report_mapping t1 ON t.id = t1.report_id
            LEFT JOIN rule t2 ON t1.rule_id = t2.id
            LEFT JOIN resource_rule t3 ON t2.id = t3.rule_id
            LEFT JOIN resource t4 ON t3.resource_id = t4.id
            LEFT JOIN plugin p on t2.plugin_id = p.id
        WHERE p.type = 'cloud'
        GROUP BY
            t.item_sort_first_level
        HAVING
            yAxis != 0
        ORDER BY
            yAxis desc
    </select>

    <select id="ruleList" resultType="com.hummer.common.core.domain.request.chart.ChartData">
        SELECT
            IFNULL( sum( t2.return_sum ), 0 ) AS yAxis,
            IFNULL( sum( t2.resources_sum ), 0 ) AS yAxis2,
            t.name AS groupName,
            (select IFNULL( sum(resources_sum), 0 ) from resource) AS xAxis
        FROM
            rule t
            LEFT JOIN resource_rule t1 ON t.id = t1.rule_id
            LEFT JOIN resource t2 ON t1.resource_id = t2.id
            LEFT JOIN plugin p on t.plugin_id = p.id
        WHERE p.type = 'cloud'
        GROUP BY
            t.id, t.name
        ORDER BY
            yAxis desc
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <select id="accountList" resultType="com.hummer.common.core.domain.request.chart.ChartData">
        SELECT
            IFNULL( sum( t1.return_sum ), 0 ) AS yAxis,
            IFNULL( sum( t1.resources_sum ), 0 ) AS yAxis2,
            t.name AS groupName,
            IFNULL( (SELECT scan_score FROM history_scan tt WHERE tt.account_id = t.id ORDER BY tt.create_time DESC limit 1), 100) AS xAxis
        FROM
            cloud_account t
            LEFT JOIN resource t1 ON t1.account_id = t.id
            LEFT JOIN plugin p on t.plugin_id = p.id
        WHERE p.type = 'cloud'
        GROUP BY
            t.id
        HAVING
            yAxis != 0
        ORDER BY
            yAxis desc
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <select id="regionsList" resultType="com.hummer.common.core.domain.request.chart.ChartData">
        SELECT
            IFNULL( sum(t2.return_sum), 0 ) AS yAxis,
            IFNULL( sum(t2.resources_sum), 0 ) AS yAxis2,
            t.region_name AS groupName,
            t.region_id AS xAxis
        FROM
            cloud_task_item t
            LEFT JOIN cloud_task_item_resource t1 ON t.id = t1.task_item_id
            LEFT JOIN resource t2 ON t2.id = t1.resource_id
            LEFT JOIN plugin p on t2.plugin_id = p.id
        <where>
            <if test="accountId != null">
                AND t.account_id = #{accountId}
            </if>
            AND p.type = 'cloud'
        </where>
        GROUP BY
            t.region_id,t.region_name
        HAVING
            yAxis != 0
        ORDER BY
            yAxis desc
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <select id="totalPolicy" resultType="java.util.Map">
        SELECT
            IFNULL( sum( t4.return_sum ), 0 ) AS yAxis,
            IFNULL( sum( t4.resources_sum ), 0 ) AS yAxis2,
            (select count(tag_name) from rule_tag) AS critical,
            t.tag_name AS groupName,
            t.tag_key AS xAxis,
            (select IFNULL( sum( return_sum ), 0 ) from resource LEFT JOIN plugin p on plugin_id = p.id WHERE p.type = 'cloud') AS returnTotal,
            (select IFNULL( sum( resources_sum ), 0 ) from resource LEFT JOIN plugin p on plugin_id = p.id WHERE p.type = 'cloud') AS resourceTotal
        FROM
            rule_tag t
            LEFT JOIN rule_tag_mapping t1 ON t.tag_key = t1.tag_key
            LEFT JOIN rule t2 ON t1.rule_id = t2.id
            LEFT JOIN resource_rule t3 ON t2.id = t3.rule_id
            LEFT JOIN resource t4 ON t3.resource_id = t4.id
            LEFT JOIN plugin p on t2.plugin_id = p.id
        WHERE p.type = 'cloud'
        GROUP BY
            t.tag_key
        HAVING
            t.tag_key IN ( 'cost', 'safety', 'tagging' )
		UNION ALL
        SELECT
            IFNULL( sum( t4.return_sum ), 0 ) AS yAxis,
            IFNULL( sum( t4.resources_sum ), 0 ) AS yAxis2,
            (select count(tag_name) from rule_tag) AS critical,
            '其他' AS groupName,
            'other' AS xAxis,
            (select IFNULL( sum( return_sum ), 0 ) from resource LEFT JOIN plugin p on plugin_id = p.id WHERE p.type = 'cloud') AS returnTotal,
            (select IFNULL( sum( resources_sum ), 0 ) from resource LEFT JOIN plugin p on plugin_id = p.id WHERE p.type = 'cloud') AS resourceTotal
        FROM
            rule_tag t
            LEFT JOIN rule_tag_mapping t1 ON t.tag_key = t1.tag_key
            LEFT JOIN rule t2 ON t1.rule_id = t2.id
            LEFT JOIN resource_rule t3 ON t2.id = t3.rule_id
            LEFT JOIN resource t4 ON t3.resource_id = t4.id
            LEFT JOIN plugin p on t2.plugin_id = p.id
        WHERE
            t.tag_key NOT IN ( 'cost', 'safety', 'tagging' )
        AND p.type = 'cloud'
    </select>

    <select id="history" resultType="com.hummer.common.core.dto.HistoryScanDTO">
        SELECT
            t.id,
            t.account_id as accountId,
            t.create_time as createTime,
            t.`operator`,
            t.resources_sum as resourcesSum,
            t.return_sum as returnSum,
            t.scan_score as scanScore,
            t.output,
            t1.name as accountName,
            t1.plugin_id as pluginId,
            t1.plugin_name as pluginName,
            t1.plugin_icon as pluginIcon
        FROM
        history_scan t
        LEFT JOIN cloud_account t1 ON t.account_id = t1.id
        LEFT JOIN plugin p on t1.plugin_id = p.id
        <where>
            <if test="accountId != null">
                AND t.account_id = #{accountId}
            </if>
            <if test="pluginId != null">
                AND t1.plugin_id = #{pluginId}
            </if>
            AND p.type = 'cloud'
        </where>
        ORDER BY
            t.create_time DESC
    </select>

</mapper>
