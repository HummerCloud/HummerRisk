<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.system.mapper.ext.ExtDashboardMapper">

    <select id="topInfo" parameterType="java.util.Map" resultType="com.hummer.common.core.dto.TopInfoDTO">
        SELECT *
        from (
              (SELECT IFNULL(count(user.id), 0) as users from user) as users,
              (SELECT IFNULL(count(task.id), 0) as tasks from task) as tasks,
              (SELECT
                  (SELECT IFNULL(count(t.id), 0) from cloud_account t)
                  as accounts) as accounts,
              (SELECT IFNULL(count(t.id), 0) as cloudAccounts from cloud_account t LEFT JOIN plugin p on t.plugin_id = p.id where p.type = 'cloud') as cloudAccounts,
              (SELECT
                  (SELECT IFNULL(count(t.id), 0) from rule t)
                  as rules) as rules,
              (SELECT IFNULL(count(t.id), 0) as cloudRules from rule t LEFT JOIN plugin p on t.plugin_id = p.id where p.type = 'cloud') as cloudRules,
              (SELECT
                  (SELECT IFNULL(count(t.id), 0) from resource_item t)
                  as results) as results,
              (SELECT IFNULL(count(t.id), 0) as cloudResult from resource_item t LEFT JOIN plugin p on t.plugin_id = p.id where p.type = 'cloud') as cloudResult
         )
    </select>

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.scanType != null and (${scanType} == null or ${scanType} == "")'>
            and t.account_type
            <include refid="condition">
                <property name="object" value="${condition}.scanType"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            and t.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
    </sql>

    <resultMap id="historyScanVoBaseResultMap" type="com.hummer.common.core.domain.request.dashboard.HistoryScanVo">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="account_id" jdbcType="VARCHAR" property="accountId" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="operator" jdbcType="VARCHAR" property="operator" />
        <result column="resources_sum" jdbcType="BIGINT" property="resourcesSum" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="scan_score" jdbcType="INTEGER" property="scanScore" />
        <result column="account_type" jdbcType="VARCHAR" property="accountType" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="output" jdbcType="LONGVARCHAR" property="output" />
    </resultMap>

    <select id="historyScanVo" parameterType="com.hummer.common.core.domain.request.dashboard.HistoryScanVo" resultMap="historyScanVoBaseResultMap">
        select * from (
        select
        t.*,
        IFNULL(t9.name, IFNULL(t7.name, IFNULL(t6.name, IFNULL(t5.name, IFNULL(t3.name, IFNULL(t2.server_name,t1.task_name)))))) as accountName,
        IFNULL(t9.severity, IFNULL(t7.severity, IFNULL(t6.severity, IFNULL(t5.severity, IFNULL(t3.severity,IFNULL(t2.severity, t1.severity)))))) as severityType,
        t8.name as userName
        from history_scan t
        left join cloud_task t1 on t.account_id = t1.id
        left join server_result t2 on t.account_id = t2.id
        left join image_result t3 on t.account_id = t3.id
        left join code_result t5 on t.account_id = t5.id
        left join cloud_native_result t6 on t.account_id = t6.id
        left join cloud_native_config_result t7 on t.account_id = t7.id
        left join file_system_result t9 on t.account_id = t9.id
        left join user t8 on t.operator = t8.id
        ) as tt
        <where>
            <if test="combine != null">
                <include refid="combine">
                    <property name="condition" value="combine"/>
                </include>
            </if>
            <if test="scanType != null and scanType != ''">
                AND tt.account_type = #{scanType}
            </if>
            <if test="accountId != null and accountId != ''">
                AND tt.account_id = #{accountId}
            </if>
            <if test="users != null and users != ''">
                AND tt.operator = #{users}
            </if>
            <if test="severityType != null and severityType != ''">
                AND tt.severityType = #{severityType}
            </if>
            <if test="startTime != null and endTime != null">
                AND tt.create_time between #{startTime} and #{endTime}
            </if>
            AND tt.accountName is not null
        </where>
        order by tt.create_time desc
    </select>

    <select id="getClouds" resultType="java.lang.Integer">
        select count(*)
        from plugin p
        where p.id in (select t.plugin_id from cloud_account t where p.type = 'cloud')
    </select>

    <select id="getAccounts" resultType="java.lang.Integer">
        select count(*)
        from cloud_account t
        left join plugin p on t.plugin_id = p.id
        where p.type = 'cloud'
    </select>

    <select id="getResources" resultType="java.lang.Integer">
        select count(*)
        from cloud_resource_item t
        left join plugin p on t.plugin_id = p.id
        where p.type = 'cloud'
    </select>

    <resultMap id="getPluginsResultMap" type="com.hummer.common.core.dto.PluginDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="icon" jdbcType="VARCHAR" property="icon" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="scan_type" jdbcType="VARCHAR" property="scanType" />
        <result column="order_" jdbcType="BIGINT" property="order" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="isExist" jdbcType="BIT" property="isExist" />
    </resultMap>

    <select id="getPlugins" resultMap="getPluginsResultMap">
        select p.*,
        CASE WHEN p.id in (select t.plugin_id from cloud_account t where p.type = 'cloud')
        THEN true
        ELSE false
        END AS isExist
        from plugin p
        where p.type = 'cloud'
        order by FIELD(isExist, true, false)
    </select>

