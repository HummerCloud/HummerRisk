<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.system.mapper.ext.ExtResourceMapper">

    <select id="resultPercentByCloud" resultType="java.lang.String">
        select IFNULL(sum( t.return_sum ), 0)/IFNULL(sum( t.resources_sum ), 1)
        from cloud_task t
        <where>
            <if test="severity != null and severity != ''">
                AND t.severity = #{severity}
            </if>
            <if test="accountId != null and accountId != ''">
                AND t.account_id = #{accountId}
            </if>
            <if test="taskId != null and taskId != ''">
                AND t.id = #{taskId}
            </if>
        </where>
    </select>

    <select id="sumReturnSum" resultType="Integer">
        select IFNULL(sum( t.return_sum ), 0)
        from history_scan_task t
        <where>
            <if test="id != null and id != ''">
                AND t.scan_id = #{id}
            </if>
        </where>
    </select>

    <select id="sumResourcesSum" resultType="Integer">
        select IFNULL(sum( t.resources_sum ), 0)
        from history_scan_task t
        <where>
            <if test="id != null and id != ''">
                AND t.scan_id = #{id}
            </if>
        </where>
    </select>

    <select id="sumScanScore" resultType="Integer">
        select IFNULL(ROUND(AVG( t.scan_score ), 0), 0)
        from history_scan_task t
        <where>
            <if test="id != null and id != ''">
                AND t.scan_id = #{id}
            </if>
        </where>
    </select>

    <resultMap id="resourceBaseResultMap" type="com.hummer.common.core.domain.ResourceWithBLOBs">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="resource_name" jdbcType="VARCHAR" property="resourceName" />
        <result column="dir_name" jdbcType="VARCHAR" property="dirName" />
        <result column="resource_status" jdbcType="VARCHAR" property="resourceStatus" />
        <result column="resource_type" jdbcType="VARCHAR" property="resourceType" />
        <result column="resources_sum" jdbcType="BIGINT" property="resourcesSum" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="account_id" jdbcType="VARCHAR" property="accountId" />
        <result column="region_id" jdbcType="VARCHAR" property="regionId" />
        <result column="region_name" jdbcType="VARCHAR" property="regionName" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="custodian_run_log" jdbcType="LONGVARCHAR" property="custodianRunLog" />
        <result column="metadata" jdbcType="LONGVARCHAR" property="metadata" />
        <result column="resources" jdbcType="LONGVARCHAR" property="resources" />
        <result column="resource_command" jdbcType="LONGVARCHAR" property="resourceCommand" />
        <result column="resource_command_action" jdbcType="LONGVARCHAR" property="resourceCommandAction" />
    </resultMap>

    <select id="resource" resultMap="resourceBaseResultMap" parameterType="com.hummer.common.core.domain.CloudTaskItem">
        SELECT t.*
        FROM resource t
        left join cloud_task_item_resource t1 on t.id = t1.resource_id
        left join cloud_task_item t2 on t1.task_item_id = t2.id
        <where>
            <if test="taskId != null and taskId != ''">
                AND t1.task_id = #{taskId}
            </if>
            <if test="id != null and id != ''">
                AND t1.task_item_id = #{id}
            </if>
            <if test="accountId != null and accountId != ''">
                AND t.account_id = #{accountId}
            </if>
            <if test="regionId != null and regionId != ''">
                AND t.region_id = #{regionId}
            </if>
            <if test="ruleId != null and ruleId != ''">
                AND t2.rule_id = #{ruleId}
            </if>
        </where>
        ORDER BY t.create_time desc
        limit 1
    </select>

</mapper>
