<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.system.mapper.ext.ExtReportResultMapper">

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.operator != null'>
            and t.operator
            <include refid="condition">
                <property name="object" value="${condition}.operator"/>
            </include>
        </if>
        <if test="${condition}.updateTime != null">
            and t.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            and t.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
    </sql>

    <resultMap id="BaseResultMap" type="com.hummer.system.dto.ReportResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="operator" jdbcType="VARCHAR" property="operator" />
        <result column="download_number" jdbcType="BIGINT" property="downloadNumber" />
        <result column="history_number" jdbcType="BIGINT" property="historyNumber" />
        <result column="pdf_path" jdbcType="VARCHAR" property="pdfPath" />
        <result column="pdf_log" jdbcType="LONGVARCHAR" property="pdfLog" />
        <collection property="checkedKeys" ofType="java.lang.String" javaType="list" select="getCheckedKeys" column="id">
        </collection>
    </resultMap>

    <select id="getCheckedKeys" resultType="java.lang.String">
        select t.account_id from report_result_detail t where t.result_id = #{id}
    </select>

    <select id="reportList" resultMap="BaseResultMap" parameterType="com.hummer.system.dto.ReportResultDTO">
        select
        t.*
        from report_result as t
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                </include>
            </if>

            <if test="request.operator != null and request.operator != ''">
                and LOWER(t.operator) like CONCAT('%', LOWER(#{request.operator}),'%')
            </if>
            <if test="request.status != null and request.status != ''">
                and t.status = #{request.status}
            </if>
        </where>
        order by t.update_time desc
    </select>

    <select id="getReport" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        t.*
        from report_result as t
        <where>
            and t.id = #{reportId}
        </where>
    </select>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <resultMap id="AccountBaseResultMap" type="com.hummer.common.core.domain.request.task.AccountVo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="proxy_id" jdbcType="INTEGER" property="proxyId" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="selectAccountByExample" parameterType="com.hummer.common.core.domain.AccountExample" resultMap="AccountBaseResultMap">
        select t.id,
               concat(t.name, ' ( ', t.plugin_name, ' ) ') as name,
               'cloudAccount' as type
        from cloud_account t
        left join plugin p on t.plugin_id = p.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <resultMap id="ServerBaseResultMap" type="com.hummer.common.core.domain.request.task.ServerVo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="server_group_id" jdbcType="VARCHAR" property="serverGroupId" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="ip" jdbcType="VARCHAR" property="ip" />
        <result column="port" jdbcType="VARCHAR" property="port" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="is_proxy" jdbcType="BIT" property="isProxy" />
        <result column="proxy_id" jdbcType="INTEGER" property="proxyId" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="selectServerByExample" parameterType="com.hummer.common.core.domain.ServerExample" resultMap="ServerBaseResultMap">
        select t.id,
               concat(t.name, ' ( ', t.type, ' ) ') as name,
               'serverAccount' as type
        from server t
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <resultMap id="ImageBaseResultMap" type="com.hummer.common.core.domain.request.task.ImageVo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
        <result column="image_tag" jdbcType="VARCHAR" property="imageTag" />
        <result column="path" jdbcType="VARCHAR" property="path" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="selectImageByExample" parameterType="com.hummer.common.core.domain.ImageExample" resultMap="ImageBaseResultMap">
        select t.id,
               concat(t.name, ' ( ', t.image_url, ' ) ') as name,
               'imageAccount' as type
        from image t
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <resultMap id="CodeBaseResultMap" type="com.hummer.common.core.domain.request.task.CodeVo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="proxy_id" jdbcType="INTEGER" property="proxyId" />
        <result column="sbom_id" jdbcType="VARCHAR" property="sbomId" />
        <result column="sbom_version_id" jdbcType="VARCHAR" property="sbomVersionId" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="selectCodeByExample" parameterType="com.hummer.common.core.domain.CodeExample" resultMap="CodeBaseResultMap">
        select t.id,
               t.name as name,
               'codeAccount' as type
        from code t
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <resultMap id="FsBaseResultMap" type="com.hummer.common.core.domain.request.task.FileSystemVo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="file_name" jdbcType="VARCHAR" property="fileName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="size" jdbcType="VARCHAR" property="size" />
        <result column="path" jdbcType="VARCHAR" property="path" />
        <result column="dir" jdbcType="VARCHAR" property="dir" />
        <result column="sbom_id" jdbcType="VARCHAR" property="sbomId" />
        <result column="sbom_version_id" jdbcType="VARCHAR" property="sbomVersionId" />
        <result column="proxy_id" jdbcType="INTEGER" property="proxyId" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="selectFsByExample" parameterType="com.hummer.common.core.domain.FileSystemExample" resultMap="FsBaseResultMap">
        select t.id,
               t.name as name,
               'fsAccount' as type
        from file_system t
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <resultMap id="K8sBaseResultMap" type="com.hummer.common.core.domain.request.task.K8sVo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="proxy_id" jdbcType="INTEGER" property="proxyId" />
        <result column="operator_status" jdbcType="VARCHAR" property="operatorStatus" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="selectK8sByExample" parameterType="com.hummer.common.core.domain.CloudNativeExample" resultMap="K8sBaseResultMap">
        select t.id,
               concat(t.name, ' ( ', t.plugin_name, ' ) ') as name,
               'k8sAccount' as type
        from cloud_native t
        left join plugin p on t.plugin_id = p.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <resultMap id="ConfigBaseResultMap" type="com.hummer.common.core.domain.request.task.ConfigVo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="proxy_id" jdbcType="INTEGER" property="proxyId" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="selectConfigByExample" parameterType="com.hummer.common.core.domain.CloudNativeConfigExample" resultMap="ConfigBaseResultMap">
        select t.id,
               t.name,
               'configAccount' as type
        from cloud_native_config t
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <resultMap id="ProjectBaseResultMap" type="com.hummer.common.core.domain.request.task.ProjectVo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="selectProjectByExample" parameterType="com.hummer.common.core.domain.CloudProjectExample" resultMap="ProjectBaseResultMap">
        select t.id,
        concat(t.account_name, ' ( ', t.plugin_name, ' ) ', DATE_FORMAT(FROM_UNIXTIME(t.create_time/1000), '%Y-%m-%d %H:%i:%s')) as name,
        'cloudProject' as type
        from cloud_project t
        left join plugin p on t.plugin_id = p.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <resultMap id="CloudProjectBaseResultMap" type="com.hummer.common.core.domain.CloudProject">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="account_name" jdbcType="VARCHAR" property="accountName" />
        <result column="account_id" jdbcType="VARCHAR" property="accountId" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="resources_sum" jdbcType="BIGINT" property="resourcesSum" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="job_type" jdbcType="VARCHAR" property="jobType" />
        <result column="xxl_job_id" jdbcType="INTEGER" property="xxlJobId" />
    </resultMap>

    <select id="getCloudProject" parameterType="java.lang.String" resultMap="CloudProjectBaseResultMap">
        select t.*
        from cloud_project t
        where t.id = #{id}
    </select>

    <resultMap id="CloudBaseResultMap" type="com.hummer.common.core.domain.CloudTask">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="task_name" jdbcType="VARCHAR" property="taskName" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_tags" jdbcType="VARCHAR" property="ruleTags" />
        <result column="account_id" jdbcType="VARCHAR" property="accountId" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="resource_types" jdbcType="VARCHAR" property="resourceTypes" />
        <result column="resources_sum" jdbcType="BIGINT" property="resourcesSum" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="scan_type" jdbcType="VARCHAR" property="scanType" />
        <result column="suggestion" jdbcType="VARCHAR" property="suggestion" />
    </resultMap>

    <select id="cloudTaskList" parameterType="java.lang.String" resultMap="CloudBaseResultMap">
        select t.*
        from cloud_task t
        where t.project_id = #{id}
          and t.status in ('FINISHED', 'WARNING')
    </select>

</mapper>
