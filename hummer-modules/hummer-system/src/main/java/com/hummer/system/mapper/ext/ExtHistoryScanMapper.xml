<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.system.mapper.ext.ExtHistoryScanMapper">

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <select id="getScanId">
      select t.id
      from history_scan t
      <where>
        <if test="accountId != null">
          and t.account_id = #{accountId}
        </if>
      </where>
      order by t.id desc
      limit 1
    </select>

    <update id="updateByExampleSelective" parameterType="com.hummer.common.core.domain.HistoryScan">
        UPDATE history_scan
        <set>
            <if test="operator != null">
                `operator` = #{operator},
            </if>
            <if test="resourcesSum != null">
                resources_sum = #{resourcesSum},
            </if>
            <if test="returnSum != null">
                return_sum = #{returnSum},
            </if>
            <if test="scanScore != null">
                scan_score = #{scanScore},
            </if>
        </set>
        WHERE account_id = #{accountId}
        ORDER BY create_time desc
        LIMIT 1
    </update>

    <resultMap id="HistoryImageReportDTOMap" type="com.hummer.common.core.dto.HistoryImageReportDTO" extends="com.hummer.system.mapper.HistoryImageResultMapper.ResultMapWithBLOBs">
        <collection property="imageResultItemWithBLOBsList" ofType="com.hummer.common.core.domain.ImageResultItemWithBLOBs" javaType="list" select="getimageResultItemWithBLOBsList" column="id">
        </collection>
    </resultMap>

    <select id="getImageResultDto" resultMap="HistoryImageReportDTOMap" parameterType="java.lang.String">
        SELECT t.*
        FROM history_image_result t
        WHERE t.id = #{id}
    </select>

    <select id="getimageResultItemWithBLOBsList" resultType="com.hummer.common.core.domain.ImageResultItemWithBLOBs" parameterType="java.lang.String">
        SELECT t.*
        FROM image_result_item t
        WHERE t.result_id = #{id}
    </select>

    <resultMap id="imageHistoryBaseResultMap" type="com.hummer.common.core.dto.HistoryImageResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="image_id" jdbcType="VARCHAR" property="imageId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="size" jdbcType="VARCHAR" property="size" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="sbom_id" jdbcType="VARCHAR" property="sbomId" />
        <result column="sbom_version_id" jdbcType="VARCHAR" property="sbomVersionId" />
        <result column="unfixed" jdbcType="BIT" property="unfixed" />
        <result column="serverty" jdbcType="VARCHAR" property="serverty" />
        <result column="return_log" jdbcType="LONGVARCHAR" property="returnLog" />
        <result column="result_json" jdbcType="LONGVARCHAR" property="resultJson" />
    </resultMap>

    <sql id="imageCombine">
        <if test='${condition}.name != null'>
            and t.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test='${condition}.status != null'>
            and t.result_status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
        <if test='${condition}.imageUrl != null'>
            and i.image_url
            <include refid="condition">
                <property name="object" value="${condition}.imageUrl"/>
            </include>
        </if>
        <if test='${condition}.ruleName != null'>
            and t.rule_name
            <include refid="condition">
                <property name="object" value="${condition}.ruleName"/>
            </include>
        </if>
        <if test='${condition}.severity != null'>
            and t.severity
            <include refid="condition">
                <property name="object" value="${condition}.severity"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            and user.id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test='${condition}.ruleTag != null and ${condition}.ruleTag.value != "all"'>
            and #{${condition}.ruleTag.value}
            <choose>
                <when test='${condition}.ruleTag.operator == "in"'>
                    in (select tag_key from rule_tag_mapping where rule_id = t.rule_id)
                </when>
                <when test='${condition}.ruleTag.operator == "not in"'>
                    not in (select tag_key from rule_tag_mapping where rule_id = t.rule_id)
                </when>
            </choose>
        </if>
        <if test="${condition}.updateTime != null">
            and t.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
    </sql>

    <select id="imageHistory" parameterType="com.hummer.common.core.domain.request.image.ImageResultRequest" resultMap="imageHistoryBaseResultMap">
        SELECT
        t.*,
        (select count(*) from image_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from image_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from image_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from image_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from image_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM history_image_result t
        left join rule_tag_mapping t1 on t1.rule_id = t.rule_id
        left join rule_tag t2 on t1.tag_key = t2.tag_key
        left join user u on t.apply_user = u.id
        left join image i on t.image_id = i.id

        <where>
            <if test="request.combine != null">
                <include refid="imageCombine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.name != null and request.name != ''">
                and LOWER(t.name) like CONCAT('%', LOWER(#{request.name}),'%')
            </if>
            <if test="request.imageUrl != null and request.imageUrl != ''">
                and LOWER(t.image_url) like CONCAT('%', LOWER(#{request.imageUrl}),'%')
            </if>
            <if test="request.sbomVersionId != null and request.sbomVersionId != ''">
                and t.sbom_version_id = #{request.sbomVersionId}
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <resultMap id="codeHistoryBaseResultMap" type="com.hummer.common.core.dto.HistoryCodeResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="code_id" jdbcType="VARCHAR" property="codeId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="sbom_id" jdbcType="VARCHAR" property="sbomId" />
        <result column="sbom_version_id" jdbcType="VARCHAR" property="sbomVersionId" />
        <result column="serverty" jdbcType="VARCHAR" property="serverty" />
        <result column="return_json" jdbcType="LONGVARCHAR" property="returnJson" />
    </resultMap>

    <sql id="codeCombine">
        <if test='${condition}.name != null'>
            and t.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test='${condition}.resultStatus != null'>
            and t.result_status
            <include refid="condition">
                <property name="object" value="${condition}.resultStatus"/>
            </include>
        </if>
        <if test='${condition}.ruleName != null'>
            and t.rule_name
            <include refid="condition">
                <property name="object" value="${condition}.ruleName"/>
            </include>
        </if>
        <if test='${condition}.severity != null'>
            and t.severity
            <include refid="condition">
                <property name="object" value="${condition}.severity"/>
            </include>
        </if>
        <if test='${condition}.ruleTag != null and ${condition}.ruleTag.value != "all"'>
            and #{${condition}.ruleTag.value}
            <choose>
                <when test='${condition}.ruleTag.operator == "in"'>
                    in (select tag_key from rule_tag_mapping where rule_id = t.rule_id)
                </when>
                <when test='${condition}.ruleTag.operator == "not in"'>
                    not in (select tag_key from rule_tag_mapping where rule_id = t.rule_id)
                </when>
            </choose>
        </if>
        <if test="${condition}.creator != null">
            and u.id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
    </sql>

    <select id="codeHistory" parameterType="com.hummer.common.core.domain.request.code.CodeResultRequest" resultMap="codeHistoryBaseResultMap">
        SELECT
        t.*,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM history_code_result t
        left join rule_tag_mapping t1 on t1.rule_id = t.rule_id
        left join rule_tag t2 on t1.tag_key = t2.tag_key
        left join user u on t.apply_user = u.id

        <where>
            <if test="request.combine != null">
                <include refid="codeCombine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.name != null and request.name != ''">
                and LOWER(t.name) like CONCAT('%', LOWER(#{request.name}),'%')
            </if>
            <if test="request.ruleName != null and request.ruleName != ''">
                and LOWER(t.rule_name) like CONCAT('%', LOWER(#{request.ruleName}),'%')
            </if>
            <if test="request.userName != null and request.userName != ''">
                and LOWER(user.name) like CONCAT('%', LOWER(#{request.userName}),'%')
            </if>
            <if test="request.sbomVersionId != null and request.sbomVersionId != ''">
                and t.sbom_version_id = #{request.sbomVersionId}
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <resultMap id="serverHistoryBaseResultMap" type="com.hummer.common.core.dto.HistoryServerResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="server_id" jdbcType="VARCHAR" property="serverId" />
        <result column="server_name" jdbcType="VARCHAR" property="serverName" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="server_group_id" jdbcType="VARCHAR" property="serverGroupId" />
        <result column="server_group_name" jdbcType="VARCHAR" property="serverGroupName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="ip" jdbcType="VARCHAR" property="ip" />
        <result column="port" jdbcType="VARCHAR" property="port" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="is_severity" jdbcType="BIT" property="isSeverity" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="return_log" jdbcType="LONGVARCHAR" property="returnLog" />
    </resultMap>

    <sql id="serverCombine">
        <if test='${condition}.name != null'>
            and t.server_name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test='${condition}.ip != null'>
            and s.ip
            <include refid="condition">
                <property name="object" value="${condition}.ip"/>
            </include>
        </if>
        <if test='${condition}.ruleName != null'>
            and t3.name
            <include refid="condition">
                <property name="object" value="${condition}.ruleName"/>
            </include>
        </if>
        <if test='${condition}.severity != null'>
            and t.severity
            <include refid="condition">
                <property name="object" value="${condition}.severity"/>
            </include>
        </if>
        <if test='${condition}.type != null'>
            and t.type
            <include refid="condition">
                <property name="object" value="${condition}.type"/>
            </include>
        </if>
        <if test='${condition}.ruleTag != null and ${condition}.ruleTag.value != "all"'>
            and #{${condition}.ruleTag.value}
            <choose>
                <when test='${condition}.ruleTag.operator == "in"'>
                    in (select tag_key from rule_tag_mapping where rule_id = t.rule_id)
                </when>
                <when test='${condition}.ruleTag.operator == "not in"'>
                    not in (select tag_key from rule_tag_mapping where rule_id = t.rule_id)
                </when>
            </choose>
        </if>
    </sql>

    <select id="serverHistory" parameterType="com.hummer.common.core.domain.request.server.ServerResultRequest" resultMap="serverHistoryBaseResultMap">
        SELECT
        t.*,
        t1.tag_key as tagKey,
        t2.tag_name as tagName,
        u.name as user,
        sg.name as groupName,
        t3.script as rule
        FROM history_server_result t
        left join rule_tag_mapping t1 on t1.rule_id = t.rule_id
        left join rule_tag t2 on t1.tag_key = t2.tag_key
        left join server_rule t3 on t.rule_id = t3.id
        left join user u on t.apply_user = u.id
        left join server s on s.id = t.server_id
        left join server_group sg on sg.id = s.server_group_id

        <where>
            <if test="request.combine != null">
                <include refid="serverCombine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.serverName != null and request.serverName != ''">
                and LOWER(t.server_name) like CONCAT('%',LOWER(#{request.serverName}),'%')
            </if>
            <if test="request.ip != null and request.ip != ''">
                and LOWER(t.ip) like CONCAT('%',LOWER(#{request.ip}),'%')
            </if>
            <if test="request.ruleName != null and request.ruleName != ''">
                and LOWER(t.rule_name) like CONCAT('%',LOWER(#{request.ruleName}),'%')
            </if>
        </where>
        ORDER BY t.is_severity, t.ip, FIELD(t.severity, 'HighRisk', 'MediumRisk', 'LowRisk'), t.server_name, t.update_time desc
    </select>

    <resultMap id="fsHistoryBaseResultMap" type="com.hummer.common.core.dto.HistoryFsResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="fs_id" jdbcType="VARCHAR" property="fsId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="sbom_id" jdbcType="VARCHAR" property="sbomId" />
        <result column="sbom_version_id" jdbcType="VARCHAR" property="sbomVersionId" />
        <result column="return_json" jdbcType="LONGVARCHAR" property="returnJson" />
    </resultMap>

    <sql id="fsCombine">
        <if test='${condition}.name != null'>
            and t.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test='${condition}.resultStatus != null'>
            and t.result_status
            <include refid="condition">
                <property name="object" value="${condition}.resultStatus"/>
            </include>
        </if>
        <if test='${condition}.ruleName != null'>
            and t.rule_name
            <include refid="condition">
                <property name="object" value="${condition}.ruleName"/>
            </include>
        </if>
        <if test='${condition}.severity != null'>
            and t.severity
            <include refid="condition">
                <property name="object" value="${condition}.severity"/>
            </include>
        </if>
        <if test='${condition}.ruleTag != null and ${condition}.ruleTag.value != "all"'>
            and #{${condition}.ruleTag.value}
            <choose>
                <when test='${condition}.ruleTag.operator == "in"'>
                    in (select tag_key from rule_tag_mapping where rule_id = t.rule_id)
                </when>
                <when test='${condition}.ruleTag.operator == "not in"'>
                    not in (select tag_key from rule_tag_mapping where rule_id = t.rule_id)
                </when>
            </choose>
        </if>
        <if test="${condition}.creator != null">
            and user.id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
    </sql>

    <select id="fsHistory" parameterType="com.hummer.common.core.domain.request.fs.FsResultRequest" resultMap="fsHistoryBaseResultMap">
        SELECT
        t.*,
        t1.file_name as fileName,
        t1.size as size,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM history_file_system_result t
        LEFT JOIN file_system t1 on t.fs_id = t1.id
        LEFT JOIN user on t.apply_user = user.id
        <where>
            <if test="request.combine != null">
                <include refid="fsCombine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.name != null and request.name != ''">
                and LOWER(t.name) like CONCAT('%', LOWER(#{request.name}),'%')
            </if>
            <if test="request.fileName != null and request.fileName != ''">
                and LOWER(t1.file_name) like CONCAT('%', LOWER(#{request.fileName}),'%')
            </if>
            <if test="request.sbomVersionId != null and request.sbomVersionId != ''">
                and t.sbom_version_id = #{request.sbomVersionId}
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <resultMap id="k8sHistoryBaseResultMap" type="com.hummer.common.core.dto.HistoryCloudNativeResultDTO">
        <!-- k8s result -->
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="cloud_native_id" jdbcType="VARCHAR" property="cloudNativeId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="return_config_sum" jdbcType="BIGINT" property="returnConfigSum" />
        <result column="scan_time" jdbcType="BIGINT" property="scanTime" />
        <!-- extra -->
        <result column="critical" jdbcType="VARCHAR" property="critical" />
        <result column="high" jdbcType="VARCHAR" property="high" />
        <result column="medium" jdbcType="VARCHAR" property="medium" />
        <result column="low" jdbcType="VARCHAR" property="low" />
        <result column="unknown" jdbcType="VARCHAR" property="unknown" />
        <result column="configCritical" jdbcType="VARCHAR" property="configCritical" />
        <result column="configHigh" jdbcType="VARCHAR" property="configHigh" />
        <result column="configMedium" jdbcType="VARCHAR" property="configMedium" />
        <result column="configLow" jdbcType="VARCHAR" property="configLow" />
        <result column="configUnknown" jdbcType="VARCHAR" property="configUnknown" />
        <result column="fail" jdbcType="VARCHAR" property="fail" />
        <result column="info" jdbcType="VARCHAR" property="info" />
        <result column="pass" jdbcType="VARCHAR" property="pass" />
        <result column="cloud_resources_sum" jdbcType="BIGINT" property="cloudResourcesSum" />
        <result column="cloud_return_sum" jdbcType="BIGINT" property="cloudReturnSum" />
    </resultMap>

    <sql id="k8sCombine">
        <if test='${condition}.name != null'>
            and t.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test="${condition}.updateTime != null">
            and t.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.scanTime != null">
            and t.update_time
            <include refid="condition">
                <property name="object" value="${condition}.scanTime"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.resultStatus != null">
            and t.result_status
            <include refid="condition">
                <property name="object" value="${condition}.resultStatus"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            and u.id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
    </sql>

    <select id="k8sHistory" parameterType="com.hummer.common.core.domain.request.k8s.K8sResultRequest" resultMap="k8sHistoryBaseResultMap">
        SELECT
        t.*,
        u.name as user_name,
        t.update_time as scan_time,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'critical') as `critical`,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'high') as `high`,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'medium') as `medium`,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'low') as `low`,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'unknown') as `unknown`,
        (select count(*) from cloud_native_result_config_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'critical') as `configCritical`,
        (select count(*) from cloud_native_result_config_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'high') as `configHigh`,
        (select count(*) from cloud_native_result_config_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'medium') as `configMedium`,
        (select count(*) from cloud_native_result_config_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'low') as `configLow`,
        (select count(*) from cloud_native_result_config_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'unknown') as `configUnknown`,
        (select count(*) from cloud_native_result_kubench tj where tj.result_id = t.id and LOWER(tj.severity) = 'fail') as `fail`,
        (select count(*) from cloud_native_result_kubench tj where tj.result_id = t.id and LOWER(tj.severity) = 'warn') as `warn`,
        (select count(*) from cloud_native_result_kubench tj where tj.result_id = t.id and LOWER(tj.severity) = 'info') as `info`,
        (select count(*) from cloud_native_result_kubench tj where tj.result_id = t.id and LOWER(tj.severity) = 'pass') as `pass`,
        (select IFNULL(sum(tj.return_sum), 0) from cloud_task tj where tj.account_id = t.cloud_native_id) as `cloud_return_sum`,
        (select IFNULL(sum(tj.resources_sum), 0) from cloud_task tj where tj.account_id = t.cloud_native_id) as `cloud_resources_sum`
        FROM history_cloud_native_result t
        left join user u on t.apply_user = u.id

        <where>
            <if test="request.combine != null">
                <include refid="k8sCombine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.name != null and request.name != ''">
                and LOWER(t.name) like CONCAT('%', LOWER(#{request.name}),'%')
            </if>
            <if test="request.userName != null and request.userName != ''">
                and user.name like CONCAT('%', #{request.userName},'%')
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <resultMap id="configHistoryBaseResultMap" type="com.hummer.common.core.dto.HistoryCloudNativeConfigResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="config_id" jdbcType="VARCHAR" property="configId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="result_json" jdbcType="LONGVARCHAR" property="resultJson" />
    </resultMap>

    <sql id="configCombine">
        <if test='${condition}.name != null'>
            and t.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            and u.id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
    </sql>

    <select id="configHistory" parameterType="com.hummer.common.core.domain.request.config.ConfigResultRequest" resultMap="configHistoryBaseResultMap">
        SELECT
        t.*,
        (select count(*) from cloud_native_config_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from cloud_native_config_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from cloud_native_config_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from cloud_native_config_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from cloud_native_config_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM history_cloud_native_config_result t
        left join user u on t.apply_user = u.id

        <where>
            <if test="request.combine != null">
                <include refid="configCombine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.name != null and request.name != ''">
                and LOWER(t.name) like CONCAT('%', LOWER(#{request.name}),'%')
            </if>
            <if test="request.userName != null and request.userName != ''">
                and LOWER(u.name) like CONCAT('%', LOWER(#{request.userName}),'%')
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

</mapper>
