<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.system.mapper.ext.ExtHistoryScanMapper">

    <select id="getScanId">
      select t.id
      from history_scan t
      <where>
        <if test="accountId != null">
          and t.account_id = #{accountId}
        </if>
      </where>
      order by t.id desc
      limit 1
    </select>

    <update id="updateByExampleSelective" parameterType="com.hummer.common.core.domain.HistoryScan">
        UPDATE history_scan
        <set>
            <if test="operator != null">
                `operator` = #{operator},
            </if>
            <if test="resourcesSum != null">
                resources_sum = #{resourcesSum},
            </if>
            <if test="returnSum != null">
                return_sum = #{returnSum},
            </if>
            <if test="scanScore != null">
                scan_score = #{scanScore},
            </if>
        </set>
        WHERE account_id = #{accountId}
        ORDER BY create_time desc
        LIMIT 1
    </update>

    <resultMap id="HistoryImageReportDTOMap" type="com.hummer.common.core.dto.HistoryImageReportDTO" extends="com.hummer.system.mapper.HistoryImageResultMapper.ResultMapWithBLOBs">
        <collection property="imageResultItemWithBLOBsList" ofType="com.hummer.common.core.domain.ImageResultItemWithBLOBs" javaType="list" select="getimageResultItemWithBLOBsList" column="id">
        </collection>
    </resultMap>

    <select id="getImageResultDto" resultMap="HistoryImageReportDTOMap" parameterType="java.lang.String">
        SELECT t.*
        FROM history_image_result t
        WHERE t.id = #{id}
    </select>

    <select id="getimageResultItemWithBLOBsList" resultType="com.hummer.common.core.domain.ImageResultItemWithBLOBs" parameterType="java.lang.String">
        SELECT t.*
        FROM image_result_item t
        WHERE t.result_id = #{id}
    </select>

    <resultMap id="imageHistoryBaseResultMap" type="com.hummer.common.core.dto.HistoryImageResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="image_id" jdbcType="VARCHAR" property="imageId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="size" jdbcType="VARCHAR" property="size" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="sbom_id" jdbcType="VARCHAR" property="sbomId" />
        <result column="sbom_version_id" jdbcType="VARCHAR" property="sbomVersionId" />
        <result column="unfixed" jdbcType="BIT" property="unfixed" />
        <result column="serverty" jdbcType="VARCHAR" property="serverty" />
        <result column="return_log" jdbcType="LONGVARCHAR" property="returnLog" />
        <result column="result_json" jdbcType="LONGVARCHAR" property="resultJson" />
    </resultMap>

    <select id="imageHistory" parameterType="java.util.Map" resultMap="imageHistoryBaseResultMap">
        SELECT
        t.*,
        (select count(*) from image_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from image_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from image_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from image_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from image_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM history_image_result t

        <where>
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <if test="imageId != null">
                AND t.image_id = #{imageId}
            </if>
            <if test="name != null">
                AND LOWER(t.name) like CONCAT('%',#{name},'%')
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <resultMap id="codeHistoryBaseResultMap" type="com.hummer.common.core.dto.HistoryCodeResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="code_id" jdbcType="VARCHAR" property="codeId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="sbom_id" jdbcType="VARCHAR" property="sbomId" />
        <result column="sbom_version_id" jdbcType="VARCHAR" property="sbomVersionId" />
        <result column="serverty" jdbcType="VARCHAR" property="serverty" />
        <result column="return_json" jdbcType="LONGVARCHAR" property="returnJson" />
    </resultMap>

    <select id="codeHistory" parameterType="java.util.Map" resultMap="codeHistoryBaseResultMap">
        SELECT
        t.*,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM history_code_result t

        <where>
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <if test="codeId != null">
                AND t.code_id = #{codeId}
            </if>
            <if test="name != null">
                AND LOWER(t.name) like CONCAT('%',#{name},'%')
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <resultMap id="serverHistoryBaseResultMap" type="com.hummer.common.core.dto.HistoryServerResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="server_id" jdbcType="VARCHAR" property="serverId" />
        <result column="server_name" jdbcType="VARCHAR" property="serverName" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="server_group_id" jdbcType="VARCHAR" property="serverGroupId" />
        <result column="server_group_name" jdbcType="VARCHAR" property="serverGroupName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="ip" jdbcType="VARCHAR" property="ip" />
        <result column="port" jdbcType="VARCHAR" property="port" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="is_severity" jdbcType="BIT" property="isSeverity" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="return_log" jdbcType="LONGVARCHAR" property="returnLog" />
    </resultMap>

    <select id="serverHistory" parameterType="java.util.Map" resultMap="serverHistoryBaseResultMap">
        SELECT
        t.*,
        t1.tag_key as tagKey,
        t2.tag_name as tagName,
        u.name as user,
        sg.name as groupName,
        t3.script as rule
        FROM history_server_result t
        left join rule_tag_mapping t1 on t1.rule_id = t.rule_id
        left join rule_tag t2 on t1.tag_key = t2.tag_key
        left join server_rule t3 on t.rule_id = t3.id
        left join user u on t.apply_user = u.id
        left join server s on s.id = t.server_id
        left join server_group sg on sg.id = s.server_group_id

        <where>
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <if test="serverId != null">
                AND t.server_id = #{serverId}
            </if>
            <if test="name != null">
                AND LOWER(t.name) like CONCAT('%',#{name},'%')
            </if>
        </where>
        ORDER BY t.is_severity, t.ip, FIELD(t.severity, 'HighRisk', 'MediumRisk', 'LowRisk'), t.server_name, t.update_time desc
    </select>

    <resultMap id="fsHistoryBaseResultMap" type="com.hummer.common.core.dto.HistoryFsResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="fs_id" jdbcType="VARCHAR" property="fsId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="sbom_id" jdbcType="VARCHAR" property="sbomId" />
        <result column="sbom_version_id" jdbcType="VARCHAR" property="sbomVersionId" />
        <result column="return_json" jdbcType="LONGVARCHAR" property="returnJson" />
    </resultMap>

    <select id="fsHistory" parameterType="java.util.Map" resultMap="fsHistoryBaseResultMap">
        SELECT
        t.*,
        t1.file_name as fileName,
        t1.size as size,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM history_file_system_result t
        LEFT JOIN file_system t1 on t.fs_id = t1.id

        <where>
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <if test="fsId != null">
                AND t.fs_id = #{fsId}
            </if>
            <if test="sbomVersionId != null">
                AND t.sbom_version_id = #{sbomVersionId}
            </if>
            <if test="name != null">
                AND LOWER(t.name) like CONCAT('%',#{name},'%')
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <resultMap id="k8sHistoryBaseResultMap" type="com.hummer.common.core.dto.HistoryCloudNativeResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="cloud_native_id" jdbcType="VARCHAR" property="cloudNativeId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="vulnerability_report" jdbcType="LONGVARCHAR" property="vulnerabilityReport" />
        <result column="config_audit_report" jdbcType="LONGVARCHAR" property="configAuditReport" />
        <result column="kube_bench" jdbcType="LONGVARCHAR" property="kubeBench" />
    </resultMap>

    <select id="k8sHistory" parameterType="java.util.Map" resultMap="k8sHistoryBaseResultMap">
        SELECT
        t.*,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'critical') as critical,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'high') as high,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'medium') as medium,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'low') as low,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'unknown') as unknown,
        (select count(*) from cloud_native_result_config_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'critical') as configCritical,
        (select count(*) from cloud_native_result_config_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'high') as configHigh,
        (select count(*) from cloud_native_result_config_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'medium') as configMedium,
        (select count(*) from cloud_native_result_config_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'low') as configLow,
        (select count(*) from cloud_native_result_config_item tj where tj.result_id = t.id and LOWER(tj.severity) = 'unknown') as configUnknown,
        (select count(*) from cloud_native_result_kubench tj where tj.result_id = t.id and LOWER(tj.severity) = 'fail') as fail,
        (select count(*) from cloud_native_result_kubench tj where tj.result_id = t.id and LOWER(tj.severity) = 'warn') as warn,
        (select count(*) from cloud_native_result_kubench tj where tj.result_id = t.id and LOWER(tj.severity) = 'info') as info,
        (select count(*) from cloud_native_result_kubench tj where tj.result_id = t.id and LOWER(tj.severity) = 'pass') as pass
        FROM history_cloud_native_result t

        <where>
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <if test="cloudNativeId != null">
                AND t.cloud_native_id = #{cloudNativeId}
            </if>
            <if test="name != null">
                AND LOWER(t.name) like CONCAT('%',#{name},'%')
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <resultMap id="configHistoryBaseResultMap" type="com.hummer.common.core.dto.HistoryCloudNativeConfigResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="config_id" jdbcType="VARCHAR" property="configId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="result_json" jdbcType="LONGVARCHAR" property="resultJson" />
    </resultMap>

    <select id="configHistory" parameterType="java.util.Map" resultMap="configHistoryBaseResultMap">
        SELECT
        t.*,
        (select count(*) from cloud_native_config_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from cloud_native_config_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from cloud_native_config_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from cloud_native_config_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from cloud_native_config_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM history_cloud_native_config_result t

        <where>
            <if test="id != null and id != ''">
                AND t.id = #{id}
            </if>
            <if test="configId != null and configId != ''">
                AND t.config_id = #{configId}
            </if>
            <if test="name != null and name != ''">
                AND LOWER(t.name) like CONCAT('%',LOWER(#{name}),'%')
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

</mapper>
