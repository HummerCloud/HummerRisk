<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.k8s.mapper.ext.ExtCodeResultMapper">

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.name != null'>
            and t.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test='${condition}.resultStatus != null'>
            and t.result_status
            <include refid="condition">
                <property name="object" value="${condition}.resultStatus"/>
            </include>
        </if>
        <if test='${condition}.ruleName != null'>
            and t.rule_name
            <include refid="condition">
                <property name="object" value="${condition}.ruleName"/>
            </include>
        </if>
        <if test='${condition}.severity != null'>
            and t.severity
            <include refid="condition">
                <property name="object" value="${condition}.severity"/>
            </include>
        </if>
        <if test='${condition}.ruleTag != null and ${condition}.ruleTag.value != "all"'>
            and #{${condition}.ruleTag.value}
            <choose>
                <when test='${condition}.ruleTag.operator == "in"'>
                    in (select tag_key from rule_tag_mapping where rule_id = t.rule_id)
                </when>
                <when test='${condition}.ruleTag.operator == "not in"'>
                    not in (select tag_key from rule_tag_mapping where rule_id = t.rule_id)
                </when>
            </choose>
        </if>
        <if test="${condition}.creator != null">
            and u.id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
    </sql>

    <select id="resultListWithBLOBs" resultType="com.hummer.common.core.dto.CodeResultDTO">
        SELECT
        t.*,
        t1.tag_key as tagKey,
        t2.tag_name as tagName,
        u.name as user
        FROM code_result t
        left join rule_tag_mapping t1 on t1.rule_id = t.rule_id
        left join rule_tag t2 on t1.tag_key = t2.tag_key
        left join user u on t.apply_user = u.id

        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.name != null and request.name != ''">
                and LOWER(t.name) like CONCAT('%', LOWER(#{request.name}),'%')
            </if>
            <if test="request.ruleName != null and request.ruleName != ''">
                and LOWER(t.rule_name) like CONCAT('%', LOWER(#{request.ruleName}),'%')
            </if>
            <if test="request.userName != null and request.userName != ''">
                and LOWER(user.name) like CONCAT('%', LOWER(#{request.userName}),'%')
            </if>
            <if test="request.sbomVersionId != null and request.sbomVersionId != ''">
                and t.sbom_version_id = #{request.sbomVersionId}
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <select id="resultList" resultType="com.hummer.common.core.dto.CodeResultDTO">
        SELECT
        t.*,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM code_result t
        left join user u on t.apply_user = u.id
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.name != null and request.name != ''">
                and LOWER(t.name) like CONCAT('%', LOWER(#{request.name}),'%')
            </if>
            <if test="request.ruleName != null and request.ruleName != ''">
                and LOWER(t.rule_name) like CONCAT('%', LOWER(#{request.ruleName}),'%')
            </if>
            <if test="request.userName != null and request.userName != ''">
                and LOWER(user.name) like CONCAT('%', LOWER(#{request.userName}),'%')
            </if>
            <if test="request.sbomVersionId != null and request.sbomVersionId != ''">
                and t.sbom_version_id = #{request.sbomVersionId}
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <select id="getCodeResult" parameterType="java.lang.String" resultType="com.hummer.common.core.dto.CodeResultDTO">
        SELECT
        t.*,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM code_result t

        <where>
            <if test="resultId != null">
                AND t.id = #{resultId}
            </if>
        </where>
    </select>

    <select id="history" parameterType="java.util.Map" resultType="com.hummer.common.core.dto.HistoryCodeResultDTO">
        SELECT
        t.*,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from code_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM history_code_result t

        <where>
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <if test="codeId != null">
                AND t.code_id = #{codeId}
            </if>
            <if test="name != null">
                AND LOWER(t.name) like CONCAT('%',#{name},'%')
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

</mapper>
