<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.k8s.mapper.ext.ExtCodeResultItemMapper">

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.pkgName != null'>
            and t.pkg_name
            <include refid="condition">
                <property name="object" value="${condition}.pkgName"/>
            </include>
        </if>
        <if test='${condition}.vulnerabilityId != null'>
            and t.vulnerability_id
            <include refid="condition">
                <property name="object" value="${condition}.vulnerabilityId"/>
            </include>
        </if>
        <if test='${condition}.severity != null'>
            and t.severity
            <include refid="condition">
                <property name="object" value="${condition}.severity"/>
            </include>
        </if>
        <if test='${condition}.severity != null'>
            and t.severity
            <include refid="condition">
                <property name="object" value="${condition}.severity"/>
            </include>
        </if>
        <if test="${condition}.installedVersion != null">
            and t.installed_version
            <include refid="condition">
                <property name="object" value="${condition}.installedVersion"/>
            </include>
        </if>
        <if test="${condition}.fixedVersion != null">
            and t.fixed_version
            <include refid="condition">
                <property name="object" value="${condition}.fixedVersion"/>
            </include>
        </if>
        <if test="${condition}.primaryUrl != null">
            and t.primary_url
            <include refid="condition">
                <property name="object" value="${condition}.primaryUrl"/>
            </include>
        </if>
    </sql>

    <resultMap id="resultItemListBySearchBaseResultMap" type="com.hummer.common.core.domain.CodeResultItemWithBLOBs">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="result_id" jdbcType="VARCHAR" property="resultId" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="vulnerability_id" jdbcType="VARCHAR" property="vulnerabilityId" />
        <result column="pkg_name" jdbcType="VARCHAR" property="pkgName" />
        <result column="installed_version" jdbcType="VARCHAR" property="installedVersion" />
        <result column="fixed_version" jdbcType="VARCHAR" property="fixedVersion" />
        <result column="severity_source" jdbcType="VARCHAR" property="severitySource" />
        <result column="primary_url" jdbcType="VARCHAR" property="primaryUrl" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="published_date" jdbcType="VARCHAR" property="publishedDate" />
        <result column="last_modified_date" jdbcType="VARCHAR" property="lastModifiedDate" />
        <result column="title" jdbcType="LONGVARCHAR" property="title" />
        <result column="description" jdbcType="LONGVARCHAR" property="description" />
        <result column="layer" jdbcType="LONGVARCHAR" property="layer" />
        <result column="data_source" jdbcType="LONGVARCHAR" property="dataSource" />
        <result column="cwe_ids" jdbcType="LONGVARCHAR" property="cweIds" />
        <result column="cvss" jdbcType="LONGVARCHAR" property="cvss" />
        <result column="references" jdbcType="LONGVARCHAR" property="references" />
    </resultMap>

    <select id="resultItemListBySearch" resultMap="resultItemListBySearchBaseResultMap">
        SELECT
        t.*
        FROM code_result_item t

        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                </include>
            </if>

            <if test="request.resultId != null and request.resultId != ''">
                and t.result_id = #{request.resultId}
            </if>
            <if test="request.pkgName != null and request.pkgName != ''">
                and LOWER(t.pkg_name) like CONCAT('%', LOWER(#{request.pkgName}),'%')
            </if>
            <if test="request.vulnerabilityId != null and request.vulnerabilityId != ''">
                and LOWER(t.vulnerability_id) like CONCAT('%', LOWER(#{request.vulnerabilityId}),'%')
            </if>
            <if test="request.severity != null and request.severity != ''">
                and LOWER(t.severity) like CONCAT('%', LOWER(#{request.severity}),'%')
            </if>
            <if test="request.installedVersion != null and request.installedVersion != ''">
                and LOWER(t.installed_version) like CONCAT('%', LOWER(#{request.installedVersion}),'%')
            </if>
            <if test="request.fixedVersion != null and request.fixedVersion != ''">
                and LOWER(t.fixed_version) like CONCAT('%', LOWER(#{request.fixedVersion}),'%')
            </if>
            <if test="request.primaryUrl != null and request.primaryUrl != ''">
                and LOWER(t.primary_url) like CONCAT('%', LOWER(#{request.primaryUrl}),'%')
            </if>
        </where>
        ORDER BY FIELD(`severity`, 'CRITICAL', 'HIGH', 'MEDIUM', 'LOW', 'UNKNOWN')
    </select>



</mapper>
