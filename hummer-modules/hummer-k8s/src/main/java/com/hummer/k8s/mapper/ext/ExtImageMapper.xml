<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.k8s.mapper.ext.ExtImageMapper">

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
            and t.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test="${condition}.imageUrl != null">
            and t.image_rul
            <include refid="condition">
                <property name="object" value="${condition}.imageUrl"/>
            </include>
        </if>
        <if test="${condition}.updateTime != null">
            and t.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            and t.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            and user.id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
    </sql>

    <resultMap id="ImageMap" type="com.hummer.common.core.dto.ImageDTO">
        <!-- image -->
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="repo_id" jdbcType="VARCHAR" property="repoId" />
        <result column="size" jdbcType="VARCHAR" property="size" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
        <result column="image_tag" jdbcType="VARCHAR" property="imageTag" />
        <result column="path" jdbcType="VARCHAR" property="path" />
        <result column="is_image_repo" jdbcType="TINYINT" property="isImageRepo" />
        <result column="is_image_icon" jdbcType="TINYINT" property="isImageIcon" />
        <result column="is_proxy" jdbcType="TINYINT" property="isProxy" />
        <result column="proxy_id" jdbcType="INTEGER" property="proxyId" />
        <result column="sbom_id" jdbcType="VARCHAR" property="sbomId" />
        <result column="sbom_version_id" jdbcType="VARCHAR" property="sbomVersionId" />
        <result column="unfixed" jdbcType="TINYINT" property="unfixed" />
        <result column="serverty" jdbcType="VARCHAR" property="serverty" />
        <result column="group_id" jdbcType="VARCHAR" property="groupId" />
        <!-- image result -->
        <result column="result_id" jdbcType="VARCHAR" property="resultId" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="scan_time" jdbcType="BIGINT" property="scanTime" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="sbom_id" jdbcType="VARCHAR" property="sbomId" />
        <result column="sbom_version_id" jdbcType="VARCHAR" property="sbomVersionId" />
        <result column="command" jdbcType="VARCHAR" property="command" />
        <result column="return_log" jdbcType="LONGVARCHAR" property="returnLog" />
        <result column="result_json" jdbcType="LONGVARCHAR" property="resultJson" />
        <!-- extra -->
        <result column="user" jdbcType="VARCHAR" property="user" />
        <result column="image_repo_name" property="imageRepoName"/>
        <result column="critical" jdbcType="VARCHAR" property="critical" />
        <result column="high" jdbcType="VARCHAR" property="high" />
        <result column="medium" jdbcType="VARCHAR" property="medium" />
        <result column="low" jdbcType="VARCHAR" property="low" />
        <result column="unknown" jdbcType="VARCHAR" property="unknown" />
    </resultMap>

    <select id="imageList" resultMap="ImageMap" parameterType="com.hummer.common.core.domain.request.image.ImageRequest">
        select
        t.*,
        t1.id as result_id,
        t1.rule_id,
        t1.rule_name,
        t1.rule_desc,
        t1.result_status,
        t1.severity,
        t1.update_time as scan_time,
        t1.return_sum,
        t1.command,
        t1.result_json,
        t1.return_log,
        user.name as user_name,
        r.name as image_repo_name,
        (select count(*) from image_result_item tj where tj.result_id = t1.id and tj.severity = 'CRITICAL') as critical,
        (select count(*) from image_result_item tj where tj.result_id = t1.id and tj.severity = 'HIGH') as high,
        (select count(*) from image_result_item tj where tj.result_id = t1.id and tj.severity = 'MEDIUM') as medium,
        (select count(*) from image_result_item tj where tj.result_id = t1.id and tj.severity = 'LOW') as low,
        (select count(*) from image_result_item tj where tj.result_id = t1.id and tj.severity = 'UNKNOWN') as unknown
        from image as t
        left join image_repo r on t.repo_id = r.id
        left join user on t.creator = user.id
        left join image_result t1 on t.id = t1.image_id
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.name != null and request.name != ''">
                and LOWER(t.name) like CONCAT('%', LOWER(#{request.name}),'%')
            </if>
            <if test="request.repo != null and request.repo != ''">
                and LOWER(t.image_url) like CONCAT('%', LOWER(#{request.repo}),'%') or LOWER(t.image_tag) like CONCAT('%', LOWER(#{request.repo}),'%') or LOWER(t.path) like CONCAT('%', LOWER(#{request.repo}),'%')
            </if>
            <if test="request.creator != null and request.creator != ''">
                and LOWER(u.name) like CONCAT('%', LOWER(#{request.creator}),'%')
            </if>
            <if test="request.imageRepoName != null and request.imageRepoName != ''">
                and LOWER(r.name) like CONCAT('%', LOWER(#{request.imageRepoName}),'%')
            </if>
        </where>
        order by t.update_time desc
    </select>

    <select id="topInfo" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT *
        from (
              (SELECT IFNULL(count(*), 0) as images from image) as images,
              (SELECT IFNULL(count(t.id), 0) as critical from image_result_item t join image_result t1 on t.result_id = t1.id where LOWER(t.severity) = 'critical') as critical,
              (SELECT IFNULL(count(t.id), 0) as high from image_result_item t join image_result t1 on t.result_id = t1.id where LOWER(t.severity) = 'high') as high,
              (SELECT IFNULL(count(t.id), 0) as medium from image_result_item t join image_result t1 on t.result_id = t1.id where LOWER(t.severity) = 'medium') as medium,
              (SELECT IFNULL(count(t.id), 0) as low from image_result_item t join image_result t1 on t.result_id = t1.id where LOWER(t.severity) = 'low') as low,
              (SELECT IFNULL(count(t.id), 0) as unknown from image_result_item t join image_result t1 on t.result_id = t1.id where LOWER(t.severity) = 'unknown') as unknown
                 )
    </select>

    <select id="imageRepoChart" resultType="java.util.Map">
        SELECT
            concat(t.name, ' (', (SELECT IFNULL(count(t1.id), 0) from image_repo_item t1 where t1.repo_id = t.id), ')') as `name`,
            (SELECT IFNULL(count(t1.id), 0) as `value` from image_repo_item t1 where t1.repo_id = t.id) as `value`
        FROM image_repo as t
        ORDER BY t.update_time DESC
        Limit 10;
    </select>

    <select id="severityChart" resultType="java.util.Map">
        SELECT
            t.name as `product`,
            (SELECT IFNULL(count(t1.id), 0) as Critical from image_result_item t1 where t1.result_id = t.id and LOWER(t1.severity) = 'critical') as Critical,
            (SELECT IFNULL(count(t1.id), 0) as High from image_result_item t1 where t1.result_id = t.id and LOWER(t1.severity) = 'high') as High,
            (SELECT IFNULL(count(t1.id), 0) as Medium from image_result_item t1 where t1.result_id = t.id and LOWER(t1.severity) = 'medium') as Medium,
            (SELECT IFNULL(count(t1.id), 0) as Low from image_result_item t1 where t1.result_id = t.id and LOWER(t1.severity) = 'low') as Low,
            (SELECT IFNULL(count(t1.id), 0) as Unknown from image_result_item t1 where t1.result_id = t.id and LOWER(t1.severity) = 'unknown') as Unknown
        FROM image_result as t
        ORDER BY t.update_time DESC
            Limit 10;
    </select>

</mapper>
