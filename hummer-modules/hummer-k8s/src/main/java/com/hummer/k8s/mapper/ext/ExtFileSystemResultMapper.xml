<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.k8s.mapper.ext.ExtFileSystemResultMapper">

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.name != null'>
            and t.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test='${condition}.resultStatus != null'>
            and t.result_status
            <include refid="condition">
                <property name="object" value="${condition}.resultStatus"/>
            </include>
        </if>
        <if test='${condition}.ruleName != null'>
            and t.rule_name
            <include refid="condition">
                <property name="object" value="${condition}.ruleName"/>
            </include>
        </if>
        <if test='${condition}.severity != null'>
            and t.severity
            <include refid="condition">
                <property name="object" value="${condition}.severity"/>
            </include>
        </if>
        <if test='${condition}.ruleTag != null and ${condition}.ruleTag.value != "all"'>
            and #{${condition}.ruleTag.value}
            <choose>
                <when test='${condition}.ruleTag.operator == "in"'>
                    in (select tag_key from rule_tag_mapping where rule_id = t.rule_id)
                </when>
                <when test='${condition}.ruleTag.operator == "not in"'>
                    not in (select tag_key from rule_tag_mapping where rule_id = t.rule_id)
                </when>
            </choose>
        </if>
        <if test="${condition}.creator != null">
            and user.id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
    </sql>

    <resultMap id="resultListBaseResultMap" type="com.hummer.common.core.dto.FsResultDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="fs_id" jdbcType="VARCHAR" property="fsId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
        <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
        <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="sbom_id" jdbcType="VARCHAR" property="sbomId" />
        <result column="sbom_version_id" jdbcType="VARCHAR" property="sbomVersionId" />
        <result column="command" jdbcType="VARCHAR" property="command" />
        <result column="return_json" jdbcType="LONGVARCHAR" property="returnJson" />
    </resultMap>

    <select id="resultList" resultMap="resultListBaseResultMap">
        SELECT
        t.*,
        t1.file_name as fileName,
        t1.size as size,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM file_system_result t
        LEFT JOIN file_system t1 on t.fs_id = t1.id
        left join user on t.apply_user = user.id
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.name != null and request.name != ''">
                and LOWER(t.name) like CONCAT('%', LOWER(#{request.name}),'%')
            </if>
            <if test="request.fileName != null and request.fileName != ''">
                and LOWER(t1.file_name) like CONCAT('%', LOWER(#{request.fileName}),'%')
            </if>
            <if test="request.sbomVersionId != null and request.sbomVersionId != ''">
                and t.sbom_version_id = #{request.sbomVersionId}
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <select id="getFsResult" parameterType="java.lang.String" resultMap="resultListBaseResultMap">
        SELECT
        t.*,
        t1.file_name as fileName,
        t1.size as size,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from file_system_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM file_system_result t
        LEFT JOIN file_system t1 on t.fs_id = t1.id

        <where>
            <if test="resultId != null">
                AND t.id = #{resultId}
            </if>
        </where>
    </select>


</mapper>
