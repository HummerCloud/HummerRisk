<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.cloud.mapper.ext.ExtCloudProjectMapper">
    <resultMap id="BaseResultMap" type="com.hummer.common.core.dto.CloudProjectDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="account_name" jdbcType="VARCHAR" property="accountName" />
        <result column="account_id" jdbcType="VARCHAR" property="accountId" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="resources_sum" jdbcType="BIGINT" property="resourcesSum" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="job_type" jdbcType="VARCHAR" property="jobType" />
        <result column="xxl_job_id" jdbcType="INTEGER" property="xxlJobId" />
        <result column="scan_score" jdbcType="INTEGER" property="scanScore" />
        <result column="groups" jdbcType="INTEGER" property="groups" />
        <result column="rules" jdbcType="INTEGER" property="rules" />
        <result column="riskGroups" jdbcType="INTEGER" property="riskGroups" />
        <result column="riskRules" jdbcType="INTEGER" property="riskRules" />
        <result column="isLatest" jdbcType="BOOLEAN" property="isLatest" />
        <collection property="cloudProjectLogList" ofType="com.hummer.common.core.domain.CloudProjectLog" javaType="list"
                    select="selectCloudProjectLogList" column="{id=id}">
        </collection>
        <collection property="cloudGroupList" ofType="com.hummer.common.core.dto.CloudGroupDTO" javaType="list"
                    select="selectCloudGroupList" column="{id=id}">
        </collection>
    </resultMap>

    <resultMap id="BaseGroupMap" type="com.hummer.common.core.dto.CloudGroupDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="project_id" jdbcType="VARCHAR" property="projectId" />
        <result column="group_id" jdbcType="INTEGER" property="groupId" />
        <result column="group_name" jdbcType="VARCHAR" property="groupName" />
        <result column="group_desc" jdbcType="VARCHAR" property="groupDesc" />
        <result column="group_level" jdbcType="VARCHAR" property="groupLevel" />
        <result column="group_flag" jdbcType="TINYINT" property="groupFlag" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="account_name" jdbcType="VARCHAR" property="accountName" />
        <result column="account_id" jdbcType="VARCHAR" property="accountId" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="resources_sum" jdbcType="BIGINT" property="resourcesSum" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="job_type" jdbcType="VARCHAR" property="jobType" />
        <result column="xxl_job_id" jdbcType="INTEGER" property="xxlJobId" />
        <result column="scan_score" jdbcType="INTEGER" property="scanScore" />
        <result column="sum" jdbcType="INTEGER" property="sum" />
        <result column="complianceNum" jdbcType="INTEGER" property="complianceNum" />
        <result column="critical" jdbcType="INTEGER" property="critical" />
        <result column="high" jdbcType="INTEGER" property="high" />
        <result column="medium" jdbcType="INTEGER" property="medium" />
        <result column="low" jdbcType="INTEGER" property="low" />
    </resultMap>

    <resultMap id="CloudProjectLogMap" type="com.hummer.common.core.domain.CloudProjectLog">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="project_id" jdbcType="VARCHAR" property="projectId" />
        <result column="init_time" jdbcType="VARCHAR" property="initTime" />
        <result column="exec_time" jdbcType="VARCHAR" property="execTime" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="operator" jdbcType="VARCHAR" property="operator" />
        <result column="result" jdbcType="TINYINT" property="result" />
    </resultMap>

    <resultMap id="BaseGroupResultMap" type="com.hummer.common.core.dto.CloudGroupDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="project_id" jdbcType="VARCHAR" property="projectId" />
        <result column="group_id" jdbcType="INTEGER" property="groupId" />
        <result column="group_name" jdbcType="VARCHAR" property="groupName" />
        <result column="group_desc" jdbcType="VARCHAR" property="groupDesc" />
        <result column="group_level" jdbcType="VARCHAR" property="groupLevel" />
        <result column="group_flag" jdbcType="TINYINT" property="groupFlag" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="account_name" jdbcType="VARCHAR" property="accountName" />
        <result column="account_id" jdbcType="VARCHAR" property="accountId" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="resources_sum" jdbcType="BIGINT" property="resourcesSum" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="job_type" jdbcType="VARCHAR" property="jobType" />
        <result column="xxl_job_id" jdbcType="INTEGER" property="xxlJobId" />
        <result column="scan_score" jdbcType="INTEGER" property="scanScore" />
        <collection property="cloudGroupLogList" ofType="com.hummer.common.core.domain.CloudGroupLog" javaType="list"
                    select="selectCloudGroupLogList" column="{id=id}">
        </collection>
    </resultMap>

    <resultMap id="CloudGroupLogMap" type="com.hummer.common.core.domain.CloudGroupLog">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="project_id" jdbcType="VARCHAR" property="projectId" />
        <result column="group_id" jdbcType="VARCHAR" property="groupId" />
        <result column="init_time" jdbcType="VARCHAR" property="initTime" />
        <result column="exec_time" jdbcType="VARCHAR" property="execTime" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="operator" jdbcType="VARCHAR" property="operator" />
        <result column="result" jdbcType="TINYINT" property="result" />
    </resultMap>

    <resultMap id="BaseProcessResultMap" type="com.hummer.common.core.dto.CloudProcessDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="projectId" jdbcType="VARCHAR" property="projectId" />
        <result column="process_step" jdbcType="INTEGER" property="processStep" />
        <result column="process_order" jdbcType="INTEGER" property="processOrder" />
        <result column="process_name" jdbcType="VARCHAR" property="processName" />
        <result column="process_rate" jdbcType="INTEGER" property="processRate" />
        <result column="exec_time" jdbcType="VARCHAR" property="execTime" />
        <result column="resultStatus" jdbcType="VARCHAR" property="resultStatus" />
        <collection property="cloudProcessList" ofType="com.hummer.common.core.domain.CloudProcess" javaType="list"
                    select="selectCloudProcessList" column="{projectId=projectId}">
        </collection>
        <collection property="cloudProcessLogList" ofType="com.hummer.common.core.domain.CloudProcessLog" javaType="list"
                    select="selectCloudProcessLogList" column="{projectId=projectId}">
        </collection>
    </resultMap>

    <resultMap id="CloudProcessMap" type="com.hummer.common.core.domain.CloudProcess">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="project_id" jdbcType="VARCHAR" property="projectId" />
        <result column="process_step" jdbcType="INTEGER" property="processStep" />
        <result column="process_order" jdbcType="INTEGER" property="processOrder" />
        <result column="process_name" jdbcType="VARCHAR" property="processName" />
        <result column="process_rate" jdbcType="INTEGER" property="processRate" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="exec_time" jdbcType="VARCHAR" property="execTime" />
    </resultMap>

    <resultMap id="CloudProcessLogMap" type="com.hummer.common.core.domain.CloudProcessLogWithBLOBs">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="project_id" jdbcType="VARCHAR" property="projectId" />
        <result column="process_id" jdbcType="VARCHAR" property="processId" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="operator" jdbcType="VARCHAR" property="operator" />
        <result column="result" jdbcType="TINYINT" property="result" />
        <result column="operation" jdbcType="LONGVARCHAR" property="operation" />
        <result column="output" jdbcType="LONGVARCHAR" property="output" />
    </resultMap>

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.name != null'>
            and t.account_name
            <include refid="condition">
                <property name="object" value="${condition}.accountName"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.pluginId != null">
            and t.pluginId
            <include refid="condition">
                <property name="object" value="${condition}.pluginId"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            and t.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            and t.creator
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
    </sql>

    <select id="getCloudProjectDTOs" resultMap="BaseResultMap">
        select
        t.*,
        CASE
        WHEN t.id in (
            SELECT t2.id FROM cloud_project t2
            JOIN (
                SELECT account_id, MAX(create_time) as max_time
                FROM cloud_project
                GROUP BY account_id
            ) t3 on t2.account_id = t3.account_id and t2.create_time = t3.max_time
        ) THEN true
        ELSE false
        END AS `isLatest`,
        (select count(cg.id) from cloud_group cg where cg.project_id = t.id) as 'groups',
        (select count(cg.id) from cloud_group cg where cg.project_id = t.id and cg.id in (select ct.group_id from
        cloud_task ct where ct.project_id = t.id and ct.return_sum &gt; 0)) as 'riskGroups',
        (select count(r.id) from rule r where r.id in (select g.rule_id from rule_group_mapping g left join cloud_group
        cg on g.group_id = cg.group_id where cg.project_id = t.id)) as 'rules',
        (select count(r.id) from cloud_task r where r.project_id = t.id and r.return_sum &gt; 0 and r.rule_id in (select
        g.rule_id from rule_group_mapping g left join cloud_group cg on g.group_id = cg.group_id where cg.project_id =
        t.id)) as 'riskRules'
        from cloud_project as t
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.accountName != null and request.accountName != ''">
                and LOWER(t.account_name) like CONCAT('%', LOWER(#{request.accountName}),'%')
            </if>
            <if test="request.creator != null and request.creator != ''">
                and LOWER(t.creator) like CONCAT('%', LOWER(#{request.creator}),'%')
            </if>
            <if test="request.status != null and request.status != ''">
                and t.status = #{request.status}
            </if>
        </where>
        order by t.create_time desc
    </select>

    <select id="selectCloudGroupList" resultMap="BaseGroupMap">
        SELECT
            t.*,
            (select count(r.id) from rule r where r.id in (select g.rule_id from rule_group_mapping g where g.group_id = t.group_id)) as 'sum',
            (select count(r.id) from cloud_task r where r.group_id = t.id and r.return_sum &gt; 0 and r.rule_id in (select g.rule_id from rule_group_mapping g where g.group_id = t.group_id)) as 'complianceNum',
            (select count(r.id) from cloud_task r where r.group_id = t.id and r.severity = 'CriticalRisk' and r.return_sum &gt; 0 and r.rule_id in (select g.rule_id from rule_group_mapping g where g.group_id = t.group_id)) as 'critical',
            (select count(r.id) from cloud_task r where r.group_id = t.id and r.severity = 'HighRisk' and r.return_sum &gt; 0 and r.rule_id in (select g.rule_id from rule_group_mapping g where g.group_id = t.group_id)) as 'high',
            (select count(r.id) from cloud_task r where r.group_id = t.id and r.severity = 'MediumRisk' and r.return_sum &gt; 0 and r.rule_id in (select g.rule_id from rule_group_mapping g where g.group_id = t.group_id)) as 'medium',
            (select count(r.id) from cloud_task r where r.group_id = t.id and r.severity = 'LowRisk' and r.return_sum &gt; 0 and r.rule_id in (select g.rule_id from rule_group_mapping g where g.group_id = t.group_id)) as 'low'
        FROM cloud_group t
        where t.project_id = #{id}
        ORDER BY t.create_time DESC
    </select>

    <select id="selectCloudProjectLogList" resultMap="CloudProjectLogMap">
        SELECT
            t.*
        FROM cloud_project_log t
        where t.project_id = #{id}
        ORDER BY t.create_time DESC
    </select>

    <select id="getCloudGroupDTOs" resultMap="BaseGroupResultMap">
        select
        t.*
        from cloud_group as t
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.accountName != null and request.accountName != ''">
                and LOWER(t.account_name) like CONCAT('%', LOWER(#{request.accountName}),'%')
            </if>
            <if test="request.creator != null and request.creator != ''">
                and LOWER(creator) like CONCAT('%', LOWER(#{creator}),'%')
            </if>
            <if test="request.status != null and request.status != ''">
                and t.status = #{request.status}
            </if>
        </where>
        order by t.create_time desc
    </select>

    <select id="selectCloudGroupLogList" resultMap="CloudProjectLogMap">
        SELECT
            t.*
        FROM cloud_group_log t
        where t.group_id = #{id}
        ORDER BY t.create_time DESC
    </select>

    <select id="getCloudProcessDTO" resultMap="BaseProcessResultMap">
        select
        t.id,
        t.project_id as projectId,
        t.process_step,
        t.process_order,
        t.process_name,
        t.process_rate,
        t.`status` as resultStatus,
        t.exec_time
        FROM cloud_process t
        WHERE t.project_id = #{request.projectId} AND t.process_order = #{request.processOrder} AND t.process_step = #{request.processStep}
        ORDER BY t.process_order desc
        LIMIT 1
    </select>

    <select id="selectCloudProcessList" resultMap="CloudProcessMap">
        SELECT
            t.*
        FROM cloud_process t
        where t.project_id = #{projectId}
        order by t.process_order, t.process_step, t.create_time desc
    </select>

    <select id="selectCloudProcessLogList" resultMap="CloudProcessLogMap">
        SELECT
            t.*
        FROM cloud_process_log t
        where t.project_id = #{projectId}
        order by t.create_time
    </select>

</mapper>
