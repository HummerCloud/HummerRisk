<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummer.cloud.mapper.ext.ExtCloudTaskMapper">
    <resultMap id="ExtResultMap" type="com.hummer.common.core.dto.CloudTaskDTO"
               extends="com.hummer.cloud.mapper.CloudTaskMapper.BaseResultMap">
            <result column="count" property="count"/>
            <result column="custom_data" property="customData"/>
            <result column="details" property="details"/>
            <result column="rule_id" property="ruleId"/>
            <result column="task_item_create_time" property="taskItemCreateTime"/>
    </resultMap>

    <select id="getTaskDetail" resultMap="ExtResultMap" parameterType="java.lang.String">
        SELECT
          cloud_task.*,
          cloud_task_item.custom_data              AS custom_data,
          cloud_task_item.details                  AS details,
          cloud_task_item.rule_id                  AS rule_id,
          cloud_task_item.create_time              AS task_item_create_time
       FROM cloud_task JOIN cloud_task_item ON cloud_task.id = cloud_task_item.task_id
       WHERE cloud_task.id = #{taskId}
       limit 1
    </select>


    <select id="searchTask" parameterType="com.hummer.common.core.domain.request.cloudTask.CloudTaskSearchRequest" resultMap="ExtResultMap">
        SELECT *
        FROM cloud_task
        <if test="applyUser != null and applyUser != ''">
            LEFT JOIN user ON cloud_task.apply_user = user.id
        </if>
        <where>
            <if test="id != null and id != ''">
                AND cloud_task.id like #{id}
            </if>
            <if test="status != null and status != ''">
                AND cloud_task.status = #{status}
            </if>
            <if test="applyUser != null and applyUser != ''">
                AND user.name LIKE #{applyUser}
            </if>
            <if test="processId != null and processId != ''">
                AND cloud_task.process_id = #{processId}
            </if>
            <if test="type != null and type != ''">
                AND cloud_task.type = #{type}
            </if>
        </where>
        Order BY cloud_task.create_time desc
    </select>

    <select id="getTaskExtendInfo" resultMap="ExtResultMap">
        SELECT cloud_task.*, COUNT(task_item_resource.resource_id) as count
        FROM cloud_task
        LEFT JOIN cloud_task_item_resource ON task_item_resource.task_id = cloud_task.id
        WHERE cloud_task.id = #{taskId}
        GROUP BY cloud_task.id
    </select>

    <select id="getResourceSum" resultType="java.lang.Integer">
        SELECT IFNULL(sum(IFNULL(t3.resources_sum, 0)), 0)
        FROM cloud_task t
        LEFT JOIN cloud_task_item t1 ON t.id = t1.task_id
        LEFT JOIN cloud_task_item_resource t2  ON t1.id = t2.task_item_id
        LEFT JOIN resource t3  ON t2.resource_id = t3.id
        WHERE t.id = #{taskId}
    </select>

    <select id="getReturnSum" resultType="java.lang.Integer">
        SELECT IFNULL(sum(IFNULL(t3.return_sum, 0)), 0)
        FROM cloud_task t
        LEFT JOIN cloud_task_item t1 ON t.id = t1.task_id
        LEFT JOIN cloud_task_item_resource t2  ON t1.id = t2.task_item_id
        LEFT JOIN resource t3  ON t2.resource_id = t3.id
        WHERE t.id = #{taskId}
    </select>

    <resultMap id="BaseResultMap" type="com.hummer.common.core.dto.CloudTaskDTO"
               extends="com.hummer.cloud.mapper.CloudTaskMapper.BaseResultMap">
        <result column="account_name" property="accountName"/>
    </resultMap>

    <select id="getTopTasksForEmail" resultMap="BaseResultMap" parameterType="com.hummer.common.core.domain.MessageOrder">
        SELECT t.*, t3.name as account_name
        FROM cloud_task t
        JOIN message_order_item t1 ON t.id = t1.task_id
        JOIN message_order t2 ON t1.message_order_id = t2.id
        JOIN cloud_account t3 ON t2.account_id = t3.id
        WHERE t2.id = #{id}
        ORDER BY t.return_sum DESC
    </select>

    <select id="getReturnSumForEmail" resultType="java.lang.Integer" parameterType="com.hummer.common.core.domain.MessageOrder">
        SELECT IFNULL(sum(IFNULL(t.return_sum, 0)), 0)
        FROM cloud_task t
        JOIN message_order_item t1 ON t.id = t1.task_id
        JOIN message_order t2 ON t1.message_order_id = t2.id
        WHERE t2.id = #{id}
    </select>

    <select id="getResourcesSumForEmail" resultType="java.lang.Integer" parameterType="com.hummer.common.core.domain.MessageOrder">
        SELECT IFNULL(sum(IFNULL(t.resources_sum, 0)), 0)
        FROM cloud_task t
        JOIN message_order_item t1 ON t.id = t1.task_id
        JOIN message_order t2 ON t1.message_order_id = t2.id
        WHERE t2.id = #{id}
    </select>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <resultMap id="BaseDtoResultMap" type="com.hummer.common.core.dto.CloudTaskDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="task_name" jdbcType="VARCHAR" property="taskName" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="cron" jdbcType="VARCHAR" property="cron" />
        <result column="trigger_id" jdbcType="VARCHAR" property="triggerId" />
        <result column="prev_fire_time" jdbcType="BIGINT" property="prevFireTime" />
        <result column="last_fire_time" jdbcType="BIGINT" property="lastFireTime" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_tags" jdbcType="VARCHAR" property="ruleTags" />
        <result column="account_id" jdbcType="VARCHAR" property="accountId" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="resource_types" jdbcType="VARCHAR" property="resourceTypes" />
        <result column="resources_sum" jdbcType="BIGINT" property="resourcesSum" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="cron_desc" jdbcType="VARCHAR" property="cronDesc" />
        <result column="scan_type" jdbcType="VARCHAR" property="scanType" />
        <result column="accountName" jdbcType="VARCHAR" property="accountName" />
    </resultMap>
    <select id="selectByExample" parameterType="com.hummer.common.core.domain.CloudTaskExample" resultMap="BaseDtoResultMap">
        select cloud_task.*, (select t1.name from cloud_account t1 where cloud_task.account_id = t1.id) as accountName
        from cloud_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByHummerId" resultMap="BaseResultMap" parameterType="String">
        select d.* FROM resource_item a
                            join cloud_task_item_resource b on a.resource_id = b.resource_id
                            join cloud_task_item c on b.task_item_id = c.id
                            join cloud_task d on d.id = c.task_id
        where hummer_id = #{hummerId} and a.region_id = #{regionId}
    </select>

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.name != null'>
            and t.task_name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test="${condition}.severity != null">
            and t.severity
            <include refid="condition">
                <property name="object" value="${condition}.severity"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            and t.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
        <if test="${condition}.applyUser != null">
            and apply_user
            <include refid="condition">
                <property name="object" value="${condition}.applyUser"/>
            </include>
        </if>
        <if test="${condition}.pluginId != null">
            and plugin_id
            <include refid="condition">
                <property name="object" value="${condition}.pluginId"/>
            </include>
        </if>
    </sql>

    <resultMap id="selectManualTasksBaseResultMap" type="com.hummer.common.core.domain.CloudTask">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="task_name" jdbcType="VARCHAR" property="taskName" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="rule_id" jdbcType="VARCHAR" property="ruleId" />
        <result column="rule_tags" jdbcType="VARCHAR" property="ruleTags" />
        <result column="account_id" jdbcType="VARCHAR" property="accountId" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="resource_types" jdbcType="VARCHAR" property="resourceTypes" />
        <result column="resources_sum" jdbcType="BIGINT" property="resourcesSum" />
        <result column="return_sum" jdbcType="BIGINT" property="returnSum" />
        <result column="scan_type" jdbcType="VARCHAR" property="scanType" />
        <result column="suggestion" jdbcType="VARCHAR" property="suggestion" />
    </resultMap>

    <select id="selectManualTasks" resultMap="selectManualTasksBaseResultMap">
        select
        t.*
        from cloud_task as t
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.accountId != null and request.accountId != ''">
                and t.account_id = #{request.accountId}
            </if>
            <if test="request.taskName != null and request.taskName != ''">
                and t.task_name like CONCAT('%', #{request.taskName},'%')
            </if>
            <if test="request.resourceTypes != null and request.resourceTypes != ''">
                and t.resource_types like CONCAT('%', #{request.resourceTypes},'%')
            </if>
            and t.type = 'manual'
        </where>
        order by FIELD(t.`status`, 'PROCESSING', 'APPROVED', 'FINISHED', 'WARNING', 'ERROR'), t.return_sum desc, t.create_time desc, FIELD(t.`severity`, 'HighRisk', 'MediumRisk', 'LowRisk')
    </select>

    <select id="selectOssManualTasks" resultMap="selectManualTasksBaseResultMap">
        select
        t.*
        from cloud_task as t
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.accountId != null and request.accountId != ''">
                and t.account_id = #{request.accountId}
            </if>
            <if test="request.taskName != null and request.taskName != ''">
                and t.task_name like CONCAT('%', #{request.taskName},'%')
            </if>
            <if test="request.resourceTypes != null and request.resourceTypes != ''">
                and t.resource_types like CONCAT('%', #{request.resourceTypes},'%')
            </if>
            and t.type = 'manual'
            and t.resource_types in ('aws.s3', 'aliyun.oss', 'tencent.cos', 'huawei.obs', 'baidu.bos', 'ucloud.oss', 'qingcloud.qingstor', 'qiniu.kodo', 'vloc.oss')
        </where>
        order by FIELD(t.`status`, 'PROCESSING', 'APPROVED', 'FINISHED', 'WARNING', 'ERROR'), t.return_sum desc, t.create_time desc, FIELD(t.`severity`, 'HighRisk', 'MediumRisk', 'LowRisk')
    </select>

</mapper>
